{"version":3,"sources":["components/Header/Header.module.css","redux/profile-reducer.js","assets/images/user.png","redux/dialogs-reducer.js","assets/images/pre-loader.svg","api/api.js","components/commons/FormsControls/FormsControns.module.css","serviceWorker.js","components/Navbar/Navbar.jsx","utils/object-helpers.js","redux/users-reducer.js","components/commons/Paginator/Paginator.jsx","components/Users/User.jsx","components/Users/Users.jsx","redux/users-selectors.js","components/Users/UsersContainer.jsx","components/Header/Header.jsx","redux/auth-reducer.js","components/Header/HeaderContainer.jsx","components/Login/Login.jsx","redux/app-reducer.js","redux/sidebar-reducer.js","redux/redux-store.js","hoc/withSuspense.js","App.js","index.js","components/Navbar/Navbar.module.css","components/commons/FormsControls/FormsControns.js","components/commons/Preloader/Preloader.js","components/Users/users.module.css","utils/validators.js","components/commons/Paginator/Paginator.module.css"],"names":["module","exports","initialState","posts","id","message","likesCount","profile","status","addPostActionCreator","newPostElement","type","setStatus","getUserProfile","userId","dispatch","a","usersAPI","getProfile","response","data","getStatus","profileAPI","updateStatus","resultCode","savePhoto","file","photos","saveProfile","getState","auth","stopSubmit","_error","messages","Promise","reject","profileReducer","state","action","newPost","filter","p","postId","dialogs","name","newMessageBody","sendMessageCreator","dialogsReducer","body","instance","axios","withCredentials","baseURL","headers","getUsers","currentPage","pageSize","get","then","follow","post","unfollow","delete","console","log","authAPI","me","login","email","password","rememberMe","captcha","logout","securityAPI","getCaptchaUrl","put","photoFile","formData","FormData","append","Boolean","window","location","hostname","match","Navbar","className","classes","nav","item","to","activeClassName","activeLink","updateObjectInArray","items","itemId","objPropName","newObjProps","map","u","users","totalUsersCount","isFetching","followingInProgress","followSucces","unfollowSucces","setCurrentPage","toggleIsFetching","toggleFollowingProgress","followUnfollowFlow","apiMethod","actionCreator","usersReducer","followed","count","Paginator","totalItemsCount","onPageChanged","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","styles","paginator","Button","onClick","variant","color","cn","selectedPage","pageNumber","key","e","User","user","userProfile","src","small","usersPhoto","buttonFollow","disabled","some","Users","props","userBlock","getUser","createSelector","usersPage","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","UsersContainer","this","Preloader","React","Component","compose","connect","bind","totalCount","Header","header","loginBlock","isAuth","captchaUrl","setAuthUserData","payload","getCaptchaUrlSuccess","getAuthUserData","url","authReducer","HeaderContainer","LoginReduxForm","reduxForm","form","handleSubmit","error","Container","component","maxWidth","paper","Avatar","avatar","Typography","alignCenter","onSubmit","noValidate","Grid","container","spacing","xs","createField","required","InputLogin","InputPassword","InputCheckbox","align","fullWidth","signUpButton","Input","formSummaryError","length","initialized","appReducer","sidebarReducer","reducers","combineReducers","profilePage","dialogsPage","sidebar","formReducer","app","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleware","__store__","withSuspense","Suspense","fallback","DialogsContainer","lazy","ProfileContainer","App","initializeApp","exact","path","render","AppContainer","withRouter","promise","all","JSApp","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","FormControl","input","meta","child","hasError","touched","formControl","children","Textarea","restProps","label","inputWidth","defaultChecked","value","inputProps","placeholder","validators","text","validate","preloader","maxLengthCreator","maxLength"],"mappings":"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","file":"static/js/main.959d3aca.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__jR2Sw\",\"loginBlock\":\"Header_loginBlock__19Ao0\"};","import {usersAPI, profileAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst SET_STATUS = 'SET_STATUS';\r\nconst DELETE_POST = 'DELETE_POST';\r\nconst SAVE_PHOTO_SUCCESS = 'SAVE_PHOTO_SUCCESS';\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {id: 1, message: 'Hi, how are u?', likesCount: 12},\r\n        {id: 2, message: 'it is my first post', likesCount: 5}],\r\n    profile: null,\r\n    status: ''\r\n};\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            let newPost = {\r\n                id: 5,\r\n                message: action.newPostElement,\r\n                likesCount: 0\r\n            };\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost]\r\n            }\r\n\r\n            // let stateCopy = { ...state };\r\n            // stateCopy.posts = [...state.posts];\r\n            // stateCopy.posts.push(newPost);\r\n            // stateCopy.newPostText = '';\r\n            // return stateCopy;\r\n        }\r\n        case SET_USER_PROFILE: {\r\n            return {\r\n                ...state,\r\n                profile: action.profile\r\n            }\r\n        }\r\n        case SET_STATUS: {\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        }\r\n        case DELETE_POST: {\r\n            return {\r\n                ...state, posts: state.posts.filter(p => p.id != action.postId)\r\n            }\r\n        }\r\n        case SAVE_PHOTO_SUCCESS: {\r\n            return {\r\n                ...state, profile: {...state.profile, photos: action.photos}\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const addPostActionCreator = (newPostElement) => ({type: ADD_POST, newPostElement})\r\n\r\nexport const setUserProfile = (profile) => ({type: SET_USER_PROFILE, profile})\r\n\r\nexport const setStatus = (status) => ({type: SET_STATUS, status})\r\n\r\nexport const deletePost = (postId) => ({type: DELETE_POST, postId})\r\nexport const savePhotoSuccess = (photos) => ({type: SAVE_PHOTO_SUCCESS, photos})\r\n\r\nexport const getUserProfile = (userId) => async (dispatch) => {\r\n    let response = await usersAPI.getProfile(userId);\r\n    dispatch(setUserProfile(response.data));\r\n\r\n}\r\n\r\nexport const getStatus = (userId) => async (dispatch) => {\r\n    let response = await profileAPI.getStatus(userId);\r\n    dispatch(setStatus(response.data));\r\n\r\n}\r\n\r\nexport const updateStatus = (status) => async (dispatch) => {\r\n    let response = await profileAPI.updateStatus(status);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setStatus(status));\r\n    }\r\n}\r\n\r\nexport const savePhoto = (file) => async (dispatch) => {\r\n    let response = await profileAPI.savePhoto(file);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(savePhotoSuccess(response.data.data.photos));\r\n    }\r\n}\r\n\r\nexport const saveProfile = (profile) => async (dispatch, getState) => {\r\n    const userId = getState().auth.userId;\r\n    const response = await profileAPI.saveProfile(profile);\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getUserProfile(userId));\r\n    } else {\r\n        dispatch(stopSubmit('edit-profile', {_error: response.data.messages[0]}));\r\n        return Promise.reject(response.data.messages[0]);\r\n    }\r\n}\r\n\r\n\r\nexport default profileReducer;","module.exports = __webpack_public_path__ + \"static/media/user.888e0066.png\";","const SEND_MESSAGE = 'SEND-MESSAGE';\r\n\r\nlet initialState = {\r\n    messages: [\r\n        { id: 1, message: 'Hi!' },\r\n        { id: 2, message: 'How are u?' },\r\n        { id: 3, message: 'Yo!' },\r\n        { id: 4, message: 'Yo!' },\r\n        { id: 5, message: 'Yo!' },\r\n        { id: 6, message: 'Yo!' }],\r\n    dialogs: [\r\n        { id: 1, name: 'Ivan' },\r\n        { id: 2, name: 'Yulia' },\r\n        { id: 3, name: 'Oleg' },\r\n        { id: 4, name: 'Ramzes' },\r\n        { id: 5, name: 'Alexander' },\r\n        { id: 6, name: 'Anton' }],\r\n    newMessageBody: \"\"\r\n}\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SEND_MESSAGE: {\r\n            let body = action.newMessageBody;\r\n\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, { id: 6, message: body }]\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const sendMessageCreator = (newMessageBody) => ({ type: SEND_MESSAGE, newMessageBody })\r\n\r\nexport default dialogsReducer;","module.exports = __webpack_public_path__ + \"static/media/pre-loader.27e2ef14.svg\";","import * as axios from 'axios';\r\n\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\r\n        \"API-KEY\": \"b64a56d5-4507-4df9-b801-8ca63b9a8f74\"\r\n    }\r\n});\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage, pageSize) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => {\r\n                return response.data;\r\n            });\r\n    },\r\n    follow(userId) {\r\n        return instance.post(`follow/${userId}`)\r\n    },\r\n    unfollow(userId) {\r\n        return instance.delete(`follow/${userId}`)\r\n    },\r\n    getProfile(userId) {\r\n        console.log('Obsolet method. Please profileAPI object.')\r\n        return profileAPI.getProfile(userId);\r\n    }\r\n}\r\n\r\nexport const authAPI = {\r\n    me() {\r\n        return instance.get(`auth/me`)\r\n    },\r\n    login(email, password, rememberMe = false, captcha = null) {\r\n        return instance.post('auth/login', {email, password, rememberMe, captcha});\r\n    },\r\n    logout() {\r\n        return instance.delete('auth/login');\r\n    }\r\n}\r\n\r\nexport const securityAPI = {\r\n    getCaptchaUrl() {\r\n        return instance.get(`security/get-captcha-url`);\r\n    }\r\n}\r\n\r\nexport const profileAPI = {\r\n    getProfile(userId) {\r\n        return instance.get(`profile/` + userId);\r\n    },\r\n    getStatus(userId) {\r\n        return instance.get(`profile/status/` + userId);\r\n    },\r\n    updateStatus(status) {\r\n        return instance.put(`profile/status`, { status: status });\r\n    },\r\n    savePhoto(photoFile) {\r\n        const formData = new FormData();\r\n        formData.append(\"image\", photoFile);\r\n        return instance.put(`profile/photo`, formData, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        });\r\n    },\r\n    saveProfile(profile) {\r\n        return instance.put(`profile`, profile );\r\n    }\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControns_formControl__2NaLv\",\"error\":\"FormsControns_error__1TovL\",\"formSummaryError\":\"FormsControns_formSummaryError__1BZaB\",\"rememberMe\":\"FormsControns_rememberMe__20dJs\",\"align\":\"FormsControns_align__1OHOs\",\"alignCenter\":\"FormsControns_alignCenter__-r7G5\",\"avatar\":\"FormsControns_avatar__1iIp_\",\"loginBlock\":\"FormsControns_loginBlock__210en\",\"inputWidth\":\"FormsControns_inputWidth__1H3WR\",\"paper\":\"FormsControns_paper__3YxLF\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport classes from './Navbar.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <nav className={classes.nav}>\r\n            <div className={classes.item}>\r\n                <NavLink to=\"/profile\" activeClassName={classes.activeLink}>Profile</NavLink>\r\n            </div>\r\n            <div className={classes.item}>\r\n                <NavLink to=\"/Dialogs\" activeClassName={classes.activeLink}>Messages</NavLink>\r\n            </div>\r\n            <div className={classes.item}>\r\n                <NavLink to=\"/Users\" activeClassName={classes.activeLink}>Users</NavLink>\r\n            </div>\r\n            <div className={classes.item}>\r\n                <a >News</a>\r\n            </div>\r\n            <div className={classes.item}>\r\n                <a>Music</a>\r\n            </div>\r\n            <div className={classes.item}>\r\n                <a>Settings</a>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Navbar;","export const updateObjectInArray = (items, itemId, objPropName, newObjProps) => {\r\n   return items.map(u => {\r\n        if (u[objPropName] === itemId) {\r\n            return {...u, ...newObjProps}\r\n        }\r\n        return u;\r\n    })\r\n}","import {usersAPI} from '../api/api';\r\nimport {updateObjectInArray} from \"../utils/object-helpers\";\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 10,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    followingInProgress: []\r\n};\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, 'id', {followed: true})\r\n            }\r\n\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, 'id', {followed: false})\r\n            }\r\n\r\n        case SET_USERS: {\r\n            return {\r\n                ...state,\r\n                users: [...action.users]\r\n            }\r\n        }\r\n        case SET_CURRENT_PAGE: {\r\n            return {\r\n                ...state, currentPage: action.currentPage\r\n            }\r\n        }\r\n        case SET_TOTAL_USERS_COUNT: {\r\n            return {\r\n                ...state, totalUsersCount: action.count\r\n            }\r\n        }\r\n        case TOGGLE_IS_FETCHING: {\r\n            return {\r\n                ...state, isFetching: action.isFetching\r\n            }\r\n        }\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS: {\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id != action.userId)\r\n\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const followSucces = (userId) => ({type: FOLLOW, userId})\r\n\r\nexport const unfollowSucces = (userId) => ({type: UNFOLLOW, userId})\r\n\r\nexport const setUsers = (users) => ({type: SET_USERS, users})\r\n\r\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage})\r\n\r\nexport const setTotalUsersCount = (totalUsersCount) => ({type: SET_TOTAL_USERS_COUNT, count: totalUsersCount})\r\n\r\nexport const toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching})\r\n\r\nexport const toggleFollowingProgress = (isFetching, userId) => ({\r\n    type: TOGGLE_IS_FOLLOWING_PROGRESS,\r\n    isFetching,\r\n    userId\r\n})\r\n\r\nexport const getUsers = (currentPage, pageSize) => {\r\n    return async (dispatch) => {\r\n        dispatch(setCurrentPage(currentPage));\r\n        dispatch(toggleIsFetching(true));\r\n\r\n        let data = await usersAPI.getUsers(currentPage, pageSize);\r\n        dispatch(toggleIsFetching(false));\r\n        dispatch(setUsers(data.items));\r\n        dispatch(setTotalUsersCount(data.totalCount));\r\n    }\r\n}\r\n\r\nconst followUnfollowFlow = async (dispatch, userId, apiMethod, actionCreator) => {\r\n    dispatch(toggleFollowingProgress(true, userId));\r\n\r\n    let response = await apiMethod(userId);\r\n    if (response.data.resultCode == 0) {\r\n        dispatch(actionCreator(userId));\r\n    }\r\n    dispatch(toggleFollowingProgress(false, userId));\r\n}\r\n\r\nexport const follow = (userId) => {\r\n    return async (dispatch) => {\r\n        dispatch(toggleFollowingProgress(true, userId));\r\n        let apiMethod = usersAPI.follow.bind(usersAPI);\r\n        let actionCreator = followSucces;\r\n        followUnfollowFlow(dispatch, userId, apiMethod, actionCreator);\r\n    }\r\n}\r\n\r\nexport const unfollow = (userId) => {\r\n    return async (dispatch) => {\r\n        dispatch(toggleFollowingProgress(true, userId));\r\n        let apiMethod = usersAPI.unfollow.bind(usersAPI);\r\n        let actionCreator = unfollowSucces;\r\n        followUnfollowFlow(dispatch, userId, apiMethod, actionCreator);\r\n    }\r\n}\r\n\r\nexport default usersReducer;","import React, {useState} from 'react';\r\nimport styles from './Paginator.module.css';\r\nimport cn from \"classnames\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\n\r\nlet Paginator = ({totalItemsCount, pageSize, currentPage, onPageChanged, portionSize = 10}) => {\r\n    let pagesCount = Math.ceil(totalItemsCount / pageSize);\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n    let portionCount = Math.ceil(pagesCount / portionSize);\r\n    let [portionNumber, setPortionNumber] = useState(1);\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n    let rightPortionPageNumber = portionNumber * portionSize;\r\n\r\n    return <div className={styles.paginator}>\r\n        {portionNumber > 1 &&\r\n        <Button onClick={() => {\r\n            setPortionNumber(portionNumber - 1)\r\n        }}\r\n                variant=\"contained\" color=\"primary\">PREV</Button>}\r\n\r\n        {pages\r\n            .filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber)\r\n            .map((p) => {\r\n                return <span className={cn({\r\n                    [styles.selectedPage]: currentPage === p\r\n                }, styles.pageNumber)}\r\n                             key={p}\r\n                             onClick={(e) => {\r\n                                 onPageChanged(p);\r\n                             }}>{p}</span>\r\n            })}\r\n\r\n        {portionCount > portionNumber &&\r\n        <Button onClick={() => {\r\n            setPortionNumber(portionNumber + 1)\r\n        }} variant=\"contained\" color=\"primary\">NEXT</Button>}\r\n    </div>\r\n}\r\n\r\n\r\nexport default Paginator;","import React from 'react';\r\nimport usersPhoto from '../../assets/images/user.png';\r\nimport styles from './users.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\n\r\nlet User = ({user, followingInProgress,unfollow,follow}) => {\r\n    return (\r\n        <div className={styles.userProfile}>\r\n                <span>\r\n                    <div>\r\n                        <NavLink to={'/profile/' + user.id}>\r\n                            <img src={user.photos.small != null ? user.photos.small : usersPhoto} className={styles.usersPhoto} />\r\n                        </NavLink>\r\n                    </div>\r\n                    <div className={styles.buttonFollow}>\r\n                        {user.followed\r\n                            ?\r\n                            <Button variant=\"outlined\" color=\"secondary\" disabled={followingInProgress.some( id => id === user.id)}\r\n                                    onClick={() => { unfollow(user.id)\r\n                                    }}>UnFollow</Button>\r\n\r\n                            : <Button variant=\"outlined\" color=\"primary\" disabled={followingInProgress.some( id => id === user.id)}\r\n                                      onClick={() => { follow(user.id)\r\n                                      }}>Follow</Button>}\r\n                    </div>\r\n                </span>\r\n                <span>\r\n                    <span>\r\n                        <div>{user.name}</div>\r\n                        <div>{user.status}</div>\r\n                    </span>\r\n                    <span>\r\n                        <div>{\"u.location.country\"}</div>\r\n                        <div>{\"u.location.city\"}</div>\r\n                    </span>\r\n                </span>\r\n            </div>)\r\n}\r\n\r\n\r\nexport default User;","import React from 'react';\r\nimport Paginator from '../commons/Paginator/Paginator';\r\nimport User from \"./User\";\r\nimport classes from './users.module.css';\r\n\r\n\r\nlet Users = ({currentPage, totalUsersCount, pageSize, onPageChanged, users, ...props}) => {\r\n    return <div>\r\n        <Paginator currentPage={currentPage} onPageChanged={onPageChanged}\r\n                   totalItemsCount={totalUsersCount} pageSize={pageSize}/>\r\n        <div className={classes.userBlock}>\r\n            {\r\n                users.map(u => <User user={u} key={u.id}\r\n                                     followingInProgress={props.followingInProgress}\r\n                                     unfollow={props.unfollow}\r\n                                     follow={props.follow}\r\n\r\n                    />\r\n                )\r\n            }\r\n        </div>\r\n    </div>\r\n}\r\n\r\n\r\nexport default Users;","import { createSelector } from \"reselect\";\r\n\r\nexport const getUserSelector = (state) => {\r\n    return state.usersPage.users;\r\n}\r\n\r\nexport const getUser = createSelector(getUserSelector,\r\n    (users) => {\r\n\r\n        return users.filter(u => true);\r\n})\r\n\r\nexport const getPageSize = (state) => {\r\n    return state.usersPage.pageSize;\r\n}\r\n\r\nexport const getTotalUsersCount = (state) => {\r\n    return state.usersPage.totalUsersCount;\r\n}\r\n\r\nexport const getCurrentPage = (state) => {\r\n    return state.usersPage.currentPage;\r\n}\r\n\r\nexport const getIsFetching = (state) => {\r\n    return state.usersPage.isFetching;\r\n}\r\n\r\nexport const getFollowingInProgress = (state) => {\r\n    return state.usersPage.followingInProgress;\r\n}","import React from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {follow, unfollow, setCurrentPage, toggleFollowingProgress, getUsers} from '../../redux/users-reducer'\r\nimport Users from './Users';\r\nimport Preloader from '../commons/Preloader/Preloader';\r\nimport {compose} from 'redux';\r\nimport {\r\n    getFollowingInProgress,\r\n    getIsFetching,\r\n    getCurrentPage,\r\n    getTotalUsersCount,\r\n    getPageSize,\r\n    getUser\r\n} from '../../redux/users-selectors';\r\n\r\nclass UsersContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        this.props.getUsers(this.props.currentPage, this.props.pageSize);\r\n    }\r\n\r\n\r\n    onPageChanged = (pageNumber) => {\r\n        this.props.getUsers(pageNumber, this.props.pageSize);\r\n    }\r\n\r\n    render() {\r\n\r\n        return <>\r\n            {this.props.isFetching ? <Preloader/> : null}\r\n            <Users totalUsersCount={this.props.totalUsersCount}\r\n                   pageSize={this.props.pageSize}\r\n                   currentPage={this.props.currentPage}\r\n                   onPageChanged={this.onPageChanged}\r\n                   users={this.props.users}\r\n                   follow={this.props.follow}\r\n                   unfollow={this.props.unfollow}\r\n                   followingInProgress={this.props.followingInProgress}/>\r\n        </>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: getUser(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state)\r\n    }\r\n}\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {\r\n        follow, unfollow,\r\n        setCurrentPage, toggleFollowingProgress,\r\n        getUsers\r\n    })\r\n)(UsersContainer);","import React from 'react';\r\nimport classes from './Header.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst Header = (props) => {\r\n  return (\r\n    <header className={classes.header}>\r\n      <img src='https://upload.wikimedia.org/wikipedia/commons/thumb/a/a7/React-icon.svg/768px-React-icon.svg.png'></img>\r\n      \r\n      <div className={classes.loginBlock}>\r\n        {props.isAuth \r\n        ? <div>{props.login} - <Button variant=\"contained\" color=\"primary\" onClick={props.logout}>Log Out</Button></div>\r\n        : <NavLink to={'/login'}>Login</NavLink> }\r\n      </div>\r\n    </header>\r\n  )\r\n}\r\n\r\nexport default Header;","import {authAPI, securityAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst SET_USER_DATA = 'auth/SET_USER_DATA';\r\nconst GET_CAPTCHA_URL_SUCCESS = 'auth/GET_CAPTCHA_URL_SUCCESS';\r\n\r\nlet initialState = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false,\r\n    captchaUrl: null\r\n}\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n        case GET_CAPTCHA_URL_SUCCESS:\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const setAuthUserData = (userId, email, login, isAuth) => ({\r\n    type: SET_USER_DATA,\r\n    payload: {userId, email, login, isAuth}\r\n})\r\n\r\nexport const getCaptchaUrlSuccess = (captchaUrl) => ({\r\n    type: GET_CAPTCHA_URL_SUCCESS, payload: {captchaUrl}\r\n})\r\n\r\nexport const getAuthUserData = () => async (dispatch) => {\r\n    let response = await authAPI.me();\r\n    if (response.data.resultCode === 0) {\r\n        let {id, email, login} = response.data.data;\r\n        dispatch(setAuthUserData(id, email, login, true));\r\n    }\r\n}\r\n\r\nexport const login = (email, password, rememberMe, captcha) => async (dispatch) => {\r\n    let response = await authAPI.login(email, password, rememberMe, captcha);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getAuthUserData());\r\n    } else {\r\n        if (response.data.resultCode === 10) {\r\n            dispatch(getCaptchaUrl());\r\n        }\r\n        let message = response.data.messages.length > 0 ? response.data.messages[0] : 'Some Error';\r\n        dispatch(stopSubmit('login', {_error: message}));\r\n    }\r\n}\r\n\r\nexport const getCaptchaUrl = () => async (dispatch) => {\r\n    const response = await securityAPI.getCaptchaUrl();\r\n    const captchaUrl = response.data.url;\r\n    dispatch(getCaptchaUrlSuccess(captchaUrl));\r\n}\r\n\r\n\r\nexport const logout = () => async (dispatch) => {\r\n    let response = await authAPI.logout();\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setAuthUserData(null, null, null, false));\r\n    }\r\n}\r\n\r\nexport default authReducer;","import React from 'react';\r\nimport Header from './Header';\r\nimport { connect } from 'react-redux';\r\nimport { logout } from '../../redux/auth-reducer';\r\n\r\n\r\nclass HeaderContainer extends React.Component {\r\n\r\n  render() {\r\n    return (\r\n      <Header {...this.props} />\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuth: state.auth.isAuth,\r\n  login: state.auth.login\r\n})\r\n\r\nexport default connect(mapStateToProps, { logout })(HeaderContainer);","import React from 'react';\r\nimport { reduxForm, Field } from 'redux-form';\r\nimport {createField, Input, InputCheckbox, InputLogin, InputPassword} from '../commons/FormsControls/FormsControns';\r\nimport { required } from '../../utils/validators';\r\nimport { connect } from 'react-redux';\r\nimport {login} from '../../redux/auth-reducer';\r\nimport { Redirect } from 'react-router-dom';\r\nimport classes from '../commons/FormsControls/FormsControns.module.css';\r\nimport Container from \"@material-ui/core/Container\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\n\r\nconst LoginForm = ({handleSubmit,error, captchaUrl}) => {\r\n    return (\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n            <div className={classes.paper}>\r\n                <Avatar className={classes.avatar}>\r\n                        <LockOutlinedIcon  />\r\n                </Avatar>\r\n                <Typography className={classes.alignCenter} component=\"h1\" variant=\"h5\">\r\n                    Sign up\r\n                </Typography>\r\n                <form onSubmit={handleSubmit} className={classes.form} noValidate>\r\n                    <Grid container spacing={2}>\r\n\r\n                        <Grid item xs={12}>\r\n                            {createField('email', 'email', [required], InputLogin)}\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            {createField('Password', 'password', [required], InputPassword, {type:'password'})}\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <div className={classes.rememberMe}>\r\n                                {createField(null, 'rememberMe', [], InputCheckbox, {type:'checkbox'}, '')}\r\n                                <Typography className={classes.align}>\r\n                                    Remember me\r\n                                </Typography>\r\n                            </div>\r\n\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Button\r\n                        onClick={handleSubmit}\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.signUpButton}\r\n                    >\r\n                        Sign Up\r\n                    </Button>\r\n                    { captchaUrl && <img src={captchaUrl} />}\r\n                    { captchaUrl && createField('symbols from img', 'captcha', [required], Input, {})}\r\n                    { error && <div className={classes.formSummaryError}>\r\n                        {error}\r\n                    </div>}\r\n                </form>\r\n            </div>\r\n        </Container>\r\n\r\n    )\r\n}\r\n\r\n\r\nconst LoginReduxForm = reduxForm({ form: 'login'})(LoginForm)\r\n\r\n\r\nconst Login = (props) => {\r\n    const onSubmit = (formData) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe, formData.captcha);\r\n    }   \r\n    \r\n    if (props.isAuth) {\r\n        return <Redirect to={\"/profile\"} />\r\n    }\r\n\r\n    return <div className={classes.loginBlock}>\r\n        <LoginReduxForm  onSubmit={onSubmit} captchaUrl={props.captchaUrl} />\r\n    </div>\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    captchaUrl: state.auth.captchaUrl,\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default connect(mapStateToProps, {login})(Login);","import { getAuthUserData } from \"./auth-reducer\";\r\n\r\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\r\n\r\n\r\nlet initialState = {\r\n  initialized: false\r\n}\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case INITIALIZED_SUCCESS:\r\n      return {\r\n        ...state,\r\n        initialized: true\r\n      }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const initializedSuccess = () => ({ type: INITIALIZED_SUCCESS })\r\n\r\nexport const initializeApp = () => (dispatch) => {\r\n  let promise = dispatch(getAuthUserData());\r\n  Promise.all([promise])\r\n  .then( () => {\r\n    dispatch(initializedSuccess());\r\n  });\r\n}\r\n\r\nexport default appReducer;","let initialState = {\r\n\r\n}\r\n\r\nconst sidebarReducer = (state = initialState, action) => {\r\n    return state;\r\n}\r\n\r\nexport default sidebarReducer;","import {createStore, combineReducers, applyMiddleware, compose} from \"redux\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport sidebarReducer from \"./sidebar-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport { reducer as formReducer } from 'redux-form';\r\nimport appReducer from \"./app-reducer\";\r\n\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    auth:authReducer,\r\n    form: formReducer,\r\n    app: appReducer\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)));\r\n\r\nwindow.__store__ = store;\r\n\r\nexport default store;","import React from 'react';\r\nimport Preloader from \"../components/commons/Preloader/Preloader\";\r\n\r\nexport const withSuspense = (Component) => {\r\n    return (props) => {\r\n       return <React.Suspense fallback={<Preloader />}>\r\n           <Component {...props} />\r\n       </React.Suspense>\r\n    };\r\n}\r\n\r\n","import React, {Component} from 'react';\nimport './App.css';\nimport Navbar from './components/Navbar/Navbar';\nimport {HashRouter, Redirect, Route, Switch, withRouter} from 'react-router-dom';\nimport UsersContainer from './components/Users/UsersContainer';\nimport HeaderContainer from './components/Header/HeaderContainer';\nimport Login from './components/Login/Login';\nimport {initializeApp} from './redux/app-reducer';\nimport {connect, Provider} from 'react-redux';\nimport {compose} from 'redux';\nimport Preloader from './components/commons/Preloader/Preloader';\nimport store from \"./redux/redux-store\";\nimport {withSuspense} from \"./hoc/withSuspense\";\n\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'));\nconst ProfileContainer = React.lazy(() => import('./components/Profile/ProfileContainer'));\n\n\nclass App extends Component {\n    componentDidMount() {\n        this.props.initializeApp();\n    }\n\n    render() {\n        if (!this.props.initialized) {\n            return <Preloader/>\n        }\n        return (\n            <div className='app-wrapper'>\n                <HeaderContainer/>\n                <Navbar/>\n                <div className='app-wrapper-content'>\n                    <Switch>\n                        <Route exact path='/' render={() => <Redirect to={'/profile'}/>}/>\n                        <Route path='/dialogs' render={withSuspense(DialogsContainer)}/>\n                        <Route path='/profile/:userId?' render={withSuspense(ProfileContainer)}/>\n                        <Route path='/users' render={() => <UsersContainer/>}/>\n                        <Route path='/login' render={() => <Login/>}/>\n                    </Switch>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    initialized: state.app.initialized\n})\n\nlet AppContainer = compose(\n    withRouter,\n    connect(mapStateToProps, {initializeApp}))(App);\n\nconst JSApp = (props) => {\n    return <HashRouter>\n        <Provider store={store}>\n            <AppContainer/>\n        </Provider>\n    </HashRouter>\n}\nexport default JSApp;","import React from 'react';\nimport * as serviceWorker from './serviceWorker';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport JSApp from './App';\nimport \"typeface-roboto\";\n\nReactDOM.render(\n    <JSApp />, document.getElementById('root'));\n\n\n\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__2x4Rg\",\"item\":\"Navbar_item__2uQIB\",\"activeLink\":\"Navbar_activeLink__2Vggm\"};","import React from 'react';\r\nimport classes from './FormsControns.module.css';\r\nimport {Field} from \"redux-form\";\r\nimport {required} from \"../../../utils/validators\";\r\nimport {TextField} from \"@material-ui/core\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\n\r\nconst FormControl = ({input, meta, child, ...props}) => {\r\n    const hasError = meta.touched && meta.error;\r\n\r\n    return (\r\n        <div className={classes.formControl + \" \" + (hasError ? classes.error : \" \")}>\r\n            <div>\r\n                {props.children}\r\n            </div>\r\n            {hasError && <span> {meta.error} </span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Textarea = (props) => {\r\n    const {input, meta, ...restProps} = props;\r\n    return <FormControl {...props}> <TextField id=\"outlined-basic\" label=\"Message\" variant=\"outlined\"{...input} {...restProps} /> </FormControl>\r\n}\r\n\r\nexport const Input = (props) => {\r\n    const {input, meta, ...restProps} = props;\r\n    return <FormControl {...props}> <input {...input} {...restProps} /> </FormControl>\r\n}\r\n\r\nexport const InputLogin = (props) => {\r\n    const {input, meta, ...restProps} = props;\r\n    return <FormControl {...props}> <TextField className={classes.inputWidth} id=\"standard-basic\" label=\"Login\" {...input} {...restProps} /> </FormControl>\r\n}\r\n\r\nexport const InputPassword = (props) => {\r\n    const {input, meta, ...restProps} = props;\r\n    return <FormControl {...props}> <TextField className={classes.inputWidth} id=\"standard-basic\" label=\"Password\" {...input} {...restProps} /> </FormControl>\r\n}\r\n\r\nexport const InputCheckbox = (props) => {\r\n    const {input, meta, ...restProps} = props;\r\n    return <FormControl {...props}> <Checkbox\r\n        defaultChecked\r\n        value=\"secondary\"\r\n        color=\"primary\"\r\n        inputProps={{ 'aria-label': 'secondary checkbox' }} {...input} {...restProps} /> </FormControl>\r\n}\r\n\r\n\r\nexport const createField = (placeholder, name, validators, component, props = {}, text = '') => {\r\n    return (\r\n        <div>\r\n            <Field placeholder={placeholder} name={name}\r\n                   validate={validators}\r\n                   component={component}\r\n                   {...props}\r\n            /> {text}\r\n        </div>\r\n    )\r\n}","import preloader from '../../../assets/images/pre-loader.svg'\r\nimport React from 'react'\r\n\r\n\r\nlet Preloader = (props) => {\r\n    return <img src={preloader} />\r\n}\r\n\r\nexport default Preloader;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"usersPhoto\":\"users_usersPhoto__1iFOd\",\"selectedPage\":\"users_selectedPage__24FSB\",\"userBlock\":\"users_userBlock__1pbex\",\"userProfile\":\"users_userProfile__2Zsd_\",\"margins\":\"users_margins__6fFAQ\",\"widthBlock\":\"users_widthBlock__3zbNw\",\"paginatorMargin\":\"users_paginatorMargin__1ar_f\"};","export const required = value => {\r\n   if (value) return undefined;\r\n   \r\n   return 'Field is required';\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if (value.length > maxLength) return `Max Length is ${maxLength} symbols`;\r\n    \r\n    return undefined;\r\n }\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"Paginator_paginator__2Clm2\",\"pageNumber\":\"Paginator_pageNumber__21H6l\",\"selectedPage\":\"Paginator_selectedPage__2zH-g\"};"],"sourceRoot":""}