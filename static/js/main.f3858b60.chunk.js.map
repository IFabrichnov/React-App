{"version":3,"sources":["assets/images/user.png","redux/dialogs-reducer.js","assets/images/pre-loader.svg","components/Navbar/Navbar.module.css","components/commons/FormsControls/FormsControns.js","serviceWorker.js","components/Navbar/Navbar.jsx","utils/object-helpers.js","redux/users-reducer.js","components/commons/Paginator/Paginator.jsx","components/Users/User.jsx","components/Users/Users.jsx","redux/users-selectors.js","components/Users/UsersContainer.jsx","components/Header/Header.jsx","redux/auth-reducer.js","components/Header/HeaderContainer.jsx","components/Login/Login.jsx","redux/app-reducer.js","redux/sidebar-reducer.js","redux/redux-store.js","hoc/withSuspense.js","App.js","index.js","components/commons/Preloader/Preloader.js","utils/validators.js","components/commons/FormsControls/FormsControns.module.css","components/commons/Paginator/Paginator.module.css","api/api.js","components/Users/users.module.css","components/Header/Header.module.css","redux/profile-reducer.js"],"names":["module","exports","initialState","messages","id","message","dialogs","name","newMessageBody","sendMessageCreator","type","dialogsReducer","state","action","body","FormControl","input","meta","props","child","hasError","touched","error","className","classes","formControl","children","Textarea","restProps","Input","createField","placeholder","validators","component","text","validate","Boolean","window","location","hostname","match","Navbar","nav","item","to","activeClassName","activeLink","updateObjectInArray","items","itemId","objPropName","newObjProps","map","u","users","pageSize","totalUsersCount","currentPage","isFetching","followingInProgress","followSucces","userId","unfollowSucces","setCurrentPage","toggleIsFetching","toggleFollowingProgress","followUnfollowFlow","dispatch","apiMethod","actionCreator","a","data","resultCode","usersReducer","followed","count","filter","Paginator","totalItemsCount","onPageChanged","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","styles","paginator","onClick","p","cn","selectedPage","pageNumber","key","e","User","user","unfollow","follow","src","photos","small","usersPhoto","buttonFollow","disabled","some","status","Users","getUser","createSelector","usersPage","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","UsersContainer","getUsers","this","Preloader","React","Component","compose","connect","usersAPI","bind","totalCount","Header","header","loginBlock","isAuth","login","logout","email","captchaUrl","setAuthUserData","payload","getCaptchaUrlSuccess","getAuthUserData","authAPI","me","response","getCaptchaUrl","securityAPI","url","authReducer","HeaderContainer","auth","LoginReduxForm","reduxForm","form","handleSubmit","onSubmit","required","formSummaryError","password","rememberMe","captcha","length","stopSubmit","_error","formData","initialized","appReducer","sidebarReducer","reducers","combineReducers","profilePage","profileReducer","dialogsPage","sidebar","formReducer","app","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleware","__store__","withSuspense","Suspense","fallback","DialogsContainer","lazy","ProfileContainer","App","initializeApp","exact","path","render","AppContainer","withRouter","promise","Promise","all","then","JSApp","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","preloader","value","maxLengthCreator","maxLength","instance","axios","withCredentials","baseURL","headers","get","post","delete","getProfile","console","log","profileAPI","getStatus","updateStatus","put","savePhoto","photoFile","FormData","append","saveProfile","profile","posts","likesCount","addPostActionCreator","newPostElement","setStatus","getUserProfile","file","getState","reject","newPost","postId"],"mappings":"2FAAAA,EAAOC,QAAU,IAA0B,kC,gqBCA3C,IAEIC,EAAe,CACfC,SAAU,CACN,CAAEC,GAAI,EAAGC,QAAS,OAClB,CAAED,GAAI,EAAGC,QAAS,cAClB,CAAED,GAAI,EAAGC,QAAS,OAClB,CAAED,GAAI,EAAGC,QAAS,OAClB,CAAED,GAAI,EAAGC,QAAS,OAClB,CAAED,GAAI,EAAGC,QAAS,QACtBC,QAAS,CACL,CAAEF,GAAI,EAAGG,KAAM,QACf,CAAEH,GAAI,EAAGG,KAAM,SACf,CAAEH,GAAI,EAAGG,KAAM,QACf,CAAEH,GAAI,EAAGG,KAAM,SACf,CAAEH,GAAI,EAAGG,KAAM,QACf,CAAEH,GAAI,EAAGG,KAAM,cACnBC,eAAgB,IAkBPC,EAAqB,SAACD,GAAD,MAAqB,CAAEE,KAnCpC,eAmCwDF,mBAE9DG,IAjBQ,WAAmC,IAAlCC,EAAiC,uDAAzBV,EAAcW,EAAW,uCACrD,OAAQA,EAAOH,MACX,IAtBa,eAuBT,IAAII,EAAOD,EAAOL,eAElB,OAAO,EAAP,GACOI,EADP,CAEIT,SAAS,GAAD,mBAAMS,EAAMT,UAAZ,CAAsB,CAAEC,GAAI,EAAGC,QAASS,OAGxD,QACI,OAAOF,K,oBC/BnBZ,EAAOC,QAAU,IAA0B,wC,qGCC3CD,EAAOC,QAAU,CAAC,IAAM,oBAAoB,KAAO,qBAAqB,WAAa,6B,2LCI/Ec,G,MAAc,SAAC,GAAmC,EAAlCC,MAAmC,IAA5BC,EAA2B,EAA3BA,KAAgBC,GAAW,EAArBC,MAAqB,yCAC9CC,EAAWH,EAAKI,SAAWJ,EAAKK,MAEtC,OACI,yBAAKC,UAAWC,IAAQC,YAAc,KAAOL,EAAWI,IAAQF,MAAQ,MACpE,6BACKJ,EAAMQ,UAEVN,GAAY,kCAAQH,EAAKK,MAAb,QAKZK,EAAW,SAACT,GAAW,IACzBF,EAA6BE,EAA7BF,MAAgBY,GAAaV,EAAtBD,KADiB,YACKC,EADL,mBAE/B,OAAO,kBAACH,EAAgBG,EAAjB,IAAyB,8CAAcF,EAAWY,IAAlD,MAGEC,EAAQ,SAACX,GAAW,IACtBF,EAA6BE,EAA7BF,MAAgBY,GAAaV,EAAtBD,KADc,YACQC,EADR,mBAE5B,OAAO,kBAACH,EAAgBG,EAAjB,IAAyB,2CAAWF,EAAWY,IAA/C,MAGEE,EAAc,SAACC,EAAaxB,EAAMyB,EAAYC,GAAsC,IAA3Bf,EAA0B,uDAAlB,GAAIgB,EAAc,uDAAP,GACrF,OACI,6BACI,kBAAC,IAAD,eAAOH,YAAaA,EAAaxB,KAAMA,EAChC4B,SAAUH,EACVC,UAAWA,GACPf,IAJf,IAKQgB,K,4DCvBIE,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,wGCWSC,EAzBA,WACX,OACI,yBAAKlB,UAAWC,IAAQkB,KACpB,yBAAKnB,UAAWC,IAAQmB,MACpB,kBAAC,IAAD,CAASC,GAAG,WAAWC,gBAAiBrB,IAAQsB,YAAhD,YAEJ,yBAAKvB,UAAWC,IAAQmB,MACpB,kBAAC,IAAD,CAASC,GAAG,WAAWC,gBAAiBrB,IAAQsB,YAAhD,aAEJ,yBAAKvB,UAAWC,IAAQmB,MACpB,kBAAC,IAAD,CAASC,GAAG,SAASC,gBAAiBrB,IAAQsB,YAA9C,UAEJ,yBAAKvB,UAAWC,IAAQmB,MACpB,oCAEJ,yBAAKpB,UAAWC,IAAQmB,MACpB,qCAEJ,yBAAKpB,UAAWC,IAAQmB,MACpB,0C,6RCvBT,IAAMI,EAAsB,SAACC,EAAOC,EAAQC,EAAaC,GAC7D,OAAOH,EAAMI,KAAI,SAAAC,GACZ,OAAIA,EAAEH,KAAiBD,E,yWACZ,CAAP,GAAWI,EAAX,GAAiBF,GAEdE,M,ykBCFf,IAQInD,EAAe,CACfoD,MAAO,GACPC,SAAU,GACVC,gBAAiB,EACjBC,YAAa,EACbC,YAAY,EACZC,oBAAqB,IAqDZC,EAAe,SAACC,GAAD,MAAa,CAACnD,KAnE3B,SAmEyCmD,WAE3CC,EAAiB,SAACD,GAAD,MAAa,CAACnD,KApE3B,WAoE2CmD,WAI/CE,EAAiB,SAACN,GAAD,MAAkB,CAAC/C,KAtExB,mBAsEgD+C,gBAI5DO,EAAmB,SAACN,GAAD,MAAiB,CAAChD,KAxEvB,qBAwEiDgD,eAE/DO,EAA0B,SAACP,EAAYG,GAAb,MAAyB,CAC5DnD,KA1EiC,+BA2EjCgD,aACAG,WAeEK,EAAkB,uCAAG,WAAOC,EAAUN,EAAQO,EAAWC,GAApC,SAAAC,EAAA,6DACvBH,EAASF,GAAwB,EAAMJ,IADhB,SAGFO,EAAUP,GAHR,OAIS,GAJT,OAIVU,KAAKC,YACdL,EAASE,EAAcR,IAE3BM,EAASF,GAAwB,EAAOJ,IAPjB,2CAAH,4DA4BTY,EA5GM,WAAmC,IAAlC7D,EAAiC,uDAAzBV,EAAcW,EAAW,uCAEnD,OAAQA,EAAOH,MACX,IApBO,SAqBH,OAAO,KACAE,EADP,CAEI0C,MAAOP,EAAoBnC,EAAM0C,MAAOzC,EAAOgD,OAAQ,KAAM,CAACa,UAAU,MAGhF,IAzBS,WA0BL,OAAO,KACA9D,EADP,CAEI0C,MAAOP,EAAoBnC,EAAM0C,MAAOzC,EAAOgD,OAAQ,KAAM,CAACa,UAAU,MAGhF,IA9BU,YA+BN,OAAO,KACA9D,EADP,CAEI0C,MAAM,YAAKzC,EAAOyC,SAG1B,IAnCiB,mBAoCb,OAAO,KACA1C,EADP,CACc6C,YAAa5C,EAAO4C,cAGtC,IAvCsB,wBAwClB,OAAO,KACA7C,EADP,CACc4C,gBAAiB3C,EAAO8D,QAG1C,IA3CmB,qBA4Cf,OAAO,KACA/D,EADP,CACc8C,WAAY7C,EAAO6C,aAGrC,IA/C6B,+BAgDzB,OAAO,KACA9C,EADP,CAEI+C,oBAAqB9C,EAAO6C,WAAP,sBACX9C,EAAM+C,qBADK,CACgB9C,EAAOgD,SACtCjD,EAAM+C,oBAAoBiB,QAAO,SAAAxE,GAAE,OAAIA,GAAMS,EAAOgD,YAIlE,QACI,OAAOjD,I,mDC7BJiE,EAhCC,SAAC,GAGb,IAH4F,IAA9EC,EAA6E,EAA7EA,gBAAiBvB,EAA4D,EAA5DA,SAAUE,EAAkD,EAAlDA,YAAasB,EAAqC,EAArCA,cAAqC,IAAtBC,mBAAsB,MAAR,GAAQ,EACvFC,EAAaC,KAAKC,KAAKL,EAAkBvB,GACzC6B,EAAQ,GACHC,EAAI,EAAGA,GAAKJ,EAAYI,IAC7BD,EAAME,KAAKD,GAEf,IAAIE,EAAeL,KAAKC,KAAKF,EAAaD,GANiD,EAOnDQ,mBAAS,GAP0C,mBAOtFC,EAPsF,KAOvEC,EAPuE,KAQvFC,GAAyBF,EAAgB,GAAKT,EAAa,EAC3DY,EAAyBH,EAAgBT,EAE7C,OAAQ,yBAAKzD,UAAWsE,IAAOC,WAC1BL,EAAgB,GACjB,4BAAQM,QAAU,WAAOL,EAAiBD,EAAc,KAAxD,QAECL,EACIR,QAAO,SAAAoB,GAAC,OAAIA,GAAKL,GAAyBK,GAAKJ,KAC/CxC,KAAK,SAAC4C,GACH,OAAO,0BAAMzE,UAAY0E,IAAG,eACvBJ,IAAOK,aAAezC,IAAgBuC,GACxCH,IAAOM,YACGC,IAAKJ,EACLD,QAAS,SAACM,GAAQtB,EAAciB,KAAQA,MAG3DT,EAAeE,GACjB,4BAAQM,QAAS,WAAQL,EAAiBD,EAAgB,KAA1D,U,mCCQOa,EAjCJ,SAAC,GAAiD,IAAhDC,EAA+C,EAA/CA,KAAM5C,EAAyC,EAAzCA,oBAAoB6C,EAAqB,EAArBA,SAASC,EAAY,EAAZA,OAC5C,OACI,6BACQ,8BACI,6BACI,kBAAC,IAAD,CAAS7D,GAAI,YAAc2D,EAAKnG,IAC5B,yBAAKsG,IAA0B,MAArBH,EAAKI,OAAOC,MAAgBL,EAAKI,OAAOC,MAAQC,IAAYtF,UAAWsE,IAAOgB,eAGhG,yBAAKtF,UAAWsE,IAAOiB,cAClBP,EAAK7B,SACA,4BAAQqC,SAAUpD,EAAoBqD,MAAM,SAAA5G,GAAE,OAAIA,IAAOmG,EAAKnG,MAChE2F,QAAS,WAAQS,EAASD,EAAKnG,MAD7B,YAGA,4BAAQ2G,SAAUpD,EAAoBqD,MAAM,SAAA5G,GAAE,OAAIA,IAAOmG,EAAKnG,MAC/D2F,QAAS,WAAQU,EAAOF,EAAKnG,MAD5B,YAKd,8BACI,8BACI,6BAAMmG,EAAKhG,MACX,6BAAMgG,EAAKU,SAEf,8BACI,6BAAM,sBACN,6BAAM,uBCRfC,EAnBH,SAAC,GAA8E,IAA7EzD,EAA4E,EAA5EA,YAAaD,EAA+D,EAA/DA,gBAAiBD,EAA8C,EAA9CA,SAAUwB,EAAoC,EAApCA,cAAezB,EAAqB,EAArBA,MAAUpC,EAAW,oFACtF,OAAO,6BACH,kBAAC,EAAD,CAAWuC,YAAaA,EAAasB,cAAeA,EACzCD,gBAAiBtB,EAAiBD,SAAUA,IACvD,6BAEQD,EAAMF,KAAI,SAAAC,GAAC,OAAI,kBAAC,EAAD,CAAMkD,KAAMlD,EAAG+C,IAAK/C,EAAEjD,GAChBuD,oBAAqBzC,EAAMyC,oBAC3B6C,SAAUtF,EAAMsF,SAChBC,OAAQvF,EAAMuF,e,wBCRtCU,EAAUC,aAJQ,SAACxG,GAC5B,OAAOA,EAAMyG,UAAU/D,SAIvB,SAACA,GAEG,OAAOA,EAAMsB,QAAO,SAAAvB,GAAC,OAAI,QAGpBiE,EAAc,SAAC1G,GACxB,OAAOA,EAAMyG,UAAU9D,UAGdgE,GAAqB,SAAC3G,GAC/B,OAAOA,EAAMyG,UAAU7D,iBAGdgE,GAAiB,SAAC5G,GAC3B,OAAOA,EAAMyG,UAAU5D,aAGdgE,GAAgB,SAAC7G,GAC1B,OAAOA,EAAMyG,UAAU3D,YAGdgE,GAAyB,SAAC9G,GACnC,OAAOA,EAAMyG,UAAU1D,qBCdrBgE,G,2MAOF5C,cAAgB,SAACoB,GACb,EAAKjF,MAAM0G,SAASzB,EAAY,EAAKjF,MAAMqC,W,mFAL3CsE,KAAK3G,MAAM0G,SAASC,KAAK3G,MAAMuC,YAAaoE,KAAK3G,MAAMqC,Y,+BAUvD,OAAO,oCACFsE,KAAK3G,MAAMwC,WAAa,kBAACoE,EAAA,EAAD,MAAe,KACxC,kBAAC,EAAD,CAAOtE,gBAAiBqE,KAAK3G,MAAMsC,gBAC5BD,SAAUsE,KAAK3G,MAAMqC,SACrBE,YAAaoE,KAAK3G,MAAMuC,YACxBsB,cAAe8C,KAAK9C,cACpBzB,MAAOuE,KAAK3G,MAAMoC,MAClBmD,OAAQoB,KAAK3G,MAAMuF,OACnBD,SAAUqB,KAAK3G,MAAMsF,SACrB7C,oBAAqBkE,KAAK3G,MAAMyC,2B,GAtBtBoE,IAAMC,WAuCpBC,eACXC,aAbkB,SAACtH,GACnB,MAAO,CACH0C,MAAO6D,EAAQvG,GACf2C,SAAU+D,EAAY1G,GACtB4C,gBAAiB+D,GAAmB3G,GACpC6C,YAAa+D,GAAe5G,GAC5B8C,WAAY+D,GAAc7G,GAC1B+C,oBAAqB+D,GAAuB9G,MAMvB,CACrB6F,OLsDc,SAAC5C,GACnB,8CAAO,WAAOM,GAAP,eAAAG,EAAA,sDACHH,EAASF,GAAwB,EAAMJ,IACnCO,EAAY+D,IAAS1B,OAAO2B,KAAKD,KAErCjE,EAAmBC,EAAUN,EAAQO,EADjBR,GAHjB,2CAAP,mDAAM,IKvDM4C,SL+DQ,SAAC3C,GACrB,8CAAO,WAAOM,GAAP,eAAAG,EAAA,sDACHH,EAASF,GAAwB,EAAMJ,IACnCO,EAAY+D,IAAS3B,SAAS4B,KAAKD,KAEvCjE,EAAmBC,EAAUN,EAAQO,EADjBN,GAHjB,2CAAP,mDAAM,IK/DFC,iBAAgBE,0BAChB2D,SL8BgB,SAACnE,EAAaF,GAClC,8CAAO,WAAOY,GAAP,eAAAG,EAAA,6DACHH,EAASJ,EAAeN,IACxBU,EAASH,GAAiB,IAFvB,SAIcmE,IAASP,SAASnE,EAAaF,GAJ7C,OAICgB,EAJD,OAKHJ,EAASH,GAAiB,IAC1BG,EArB4B,CAACzD,KArEnB,YAqEoC4C,MAqB5BiB,EAAKvB,QACvBmB,EAlBgD,CAACzD,KAvE3B,wBAuEwDiE,MAkBlDJ,EAAK8D,aAP9B,2CAAP,mDAAM,MKnCKJ,CAMbN,I,oBC1CaW,GAdA,SAACpH,GACd,OACE,4BAAQK,UAAWC,KAAQ+G,QACzB,yBAAK7B,IAAI,sGAET,yBAAKnF,UAAWC,KAAQgH,YACrBtH,EAAMuH,OACL,6BAAMvH,EAAMwH,MAAZ,MAAqB,4BAAQ3C,QAAS7E,EAAMyH,QAAvB,YACrB,kBAAC,IAAD,CAAS/F,GAAI,UAAb,Y,slBCTV,IAGI1C,GAAe,CACf2D,OAAQ,KACR+E,MAAO,KACPF,MAAO,KACPD,QAAQ,EACRI,WAAY,MAoBHC,GAAkB,SAACjF,EAAQ+E,EAAOF,EAAOD,GAAvB,MAAmC,CAC9D/H,KA7BkB,qBA8BlBqI,QAAS,CAAClF,SAAQ+E,QAAOF,QAAOD,YAGvBO,GAAuB,SAACH,GAAD,MAAiB,CACjDnI,KAjC4B,+BAiCGqI,QAAS,CAACF,gBAGhCI,GAAkB,yDAAM,WAAO9E,GAAP,uBAAAG,EAAA,sEACZ4E,IAAQC,KADI,OAEA,KAD7BC,EAD6B,QAEpB7E,KAAKC,aAAmB,EACR4E,EAAS7E,KAAKA,KAAlCnE,EAD2B,EAC3BA,GAAIwI,EADuB,EACvBA,MAAOF,EADgB,EAChBA,MAChBvE,EAAS2E,GAAgB1I,EAAIwI,EAAOF,GAAO,KAJd,2CAAN,uDAqBlBW,GAAgB,yDAAM,WAAOlF,GAAP,iBAAAG,EAAA,sEACRgF,IAAYD,gBADJ,OACzBD,EADyB,OAEzBP,EAAaO,EAAS7E,KAAKgF,IACjCpF,EAAS6E,GAAqBH,IAHC,2CAAN,uDAcdW,GA7DK,WAAmC,IAAlC5I,EAAiC,uDAAzBV,GAAcW,EAAW,uCAClD,OAAQA,EAAOH,MACX,IAbc,qBAkBd,IAjBwB,+BAkBpB,OAAO,MACAE,EADP,GAEOC,EAAOkI,SAElB,QACI,OAAOnI,ICrBb6I,G,iLAGF,OACE,kBAAC,GAAW5B,KAAK3G,W,GAJO6G,IAAMC,WAcrBE,gBALS,SAACtH,GAAD,MAAY,CAClC6H,OAAQ7H,EAAM8I,KAAKjB,OACnBC,MAAO9H,EAAM8I,KAAKhB,SAGoB,CAAEC,ODgDpB,yDAAM,WAAOxE,GAAP,SAAAG,EAAA,sEACH4E,IAAQP,SADL,OAES,IAFT,OAEXpE,KAAKC,YACdL,EAAS2E,GAAgB,KAAM,KAAM,MAAM,IAHvB,2CAAN,wDChDPZ,CAAqCuB,I,gDCU9CE,GAAiBC,aAAU,CAAEC,KAAM,SAAlBD,EArBL,SAAC,GAAsC,IAArCE,EAAoC,EAApCA,aAAaxI,EAAuB,EAAvBA,MAAOuH,EAAgB,EAAhBA,WACpC,OACI,0BAAMkB,SAAUD,GAEPhI,aAAY,QAAS,QAAS,CAACkI,MAAWnI,MAC1CC,aAAY,WAAY,WAAY,CAACkI,MAAWnI,KAAO,CAACnB,KAAK,aAC7DoB,aAAY,KAAM,aAAc,GAAID,KAAO,CAACnB,KAAK,YAAa,eAEjEmI,GAAc,yBAAKnC,IAAKmC,IACxBA,GAAc/G,aAAY,mBAAoB,UAAW,CAACkI,MAAWnI,KAAO,IAC9EP,GAAS,yBAAKC,UAAWC,KAAQyI,kBAC5B3I,GAEL,6BACI,8CA8BD4G,gBALS,SAACtH,GAAD,MAAY,CAChCiI,WAAYjI,EAAM8I,KAAKb,WACvBJ,OAAQ7H,EAAM8I,KAAKjB,UAGiB,CAACC,MFLpB,SAACE,EAAOsB,EAAUC,EAAYC,GAA9B,8CAA0C,WAAOjG,GAAP,iBAAAG,EAAA,sEACtC4E,IAAQR,MAAME,EAAOsB,EAAUC,EAAYC,GADL,OAE1B,KAD7BhB,EADuD,QAE9C7E,KAAKC,WACdL,EAAS8E,OAEwB,KAA7BG,EAAS7E,KAAKC,YACdL,EAASkF,MAEThJ,EAAU+I,EAAS7E,KAAKpE,SAASkK,OAAS,EAAIjB,EAAS7E,KAAKpE,SAAS,GAAK,aAC9EgE,EAASmG,aAAW,QAAS,CAACC,OAAQlK,MATiB,2CAA1C,wDEKN6H,EApBD,SAAChH,GAKX,OAAIA,EAAMuH,OACC,kBAAC,IAAD,CAAU7F,GAAI,aAGlB,6BACH,qCACA,kBAAC+G,GAAD,CAAgBI,SAVH,SAACS,GACdtJ,EAAMwH,MAAM8B,EAAS5B,MAAO4B,EAASN,SAAUM,EAASL,WAAYK,EAASJ,UASzCvB,WAAY3H,EAAM2H,iB,6kBC1C9D,IAGI3I,GAAe,CACjBuK,aAAa,GA0BAC,GAvBI,WAAmC,IAAlC9J,EAAiC,uDAAzBV,GAAcW,EAAW,uCACnD,OAAQA,EAAOH,MACb,IATwB,sBAUtB,OAAO,MACFE,EADL,CAEE6J,aAAa,IAGjB,QACE,OAAO7J,I,mBClBTV,GAAe,GAQJyK,GAJQ,WAAmC,IAAlC/J,EAAiC,uDAAzBV,GAAyB,iCACrD,OAAOU,G,oBCMPgK,GAAWC,YAAgB,CAC3BC,YAAaC,KACbC,YAAarK,KACbsK,QAASN,GACTtD,UAAW5C,EACXiF,KAAKF,GACLK,KAAMqB,KACNC,IAAKT,KAGHU,GAAmB/I,OAAOgJ,sCAAwCpD,IAClEqD,GAAQC,YAAYX,GAAUQ,GAAiBI,YAAgBC,QAErEpJ,OAAOqJ,UAAYJ,GAEJA,UCvBFK,GAAe,SAAC3D,GACzB,OAAO,SAAC9G,GACL,OAAO,kBAAC,IAAM0K,SAAP,CAAgBC,SAAU,kBAAC/D,EAAA,EAAD,OAC7B,kBAACE,EAAc9G,MCQpB4K,GAAmB/D,IAAMgE,MAAK,kBAAM,iCACpCC,GAAmBjE,IAAMgE,MAAK,kBAAM,iCAGpCE,G,4LAEEpE,KAAK3G,MAAMgL,kB,+BAIX,OAAKrE,KAAK3G,MAAMuJ,YAIZ,yBAAKlJ,UAAU,eACX,kBAAC,GAAD,MACA,kBAAC,EAAD,MACA,yBAAKA,UAAU,uBACX,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAO4K,OAAK,EAACC,KAAK,IAAIC,OAAQ,kBAAM,kBAAC,IAAD,CAAUzJ,GAAI,gBAClD,kBAAC,IAAD,CAAOwJ,KAAK,WAAWC,OAAQV,GAAaG,MAC5C,kBAAC,IAAD,CAAOM,KAAK,oBAAoBC,OAAQV,GAAaK,MACrD,kBAAC,IAAD,CAAOI,KAAK,SAASC,OAAQ,kBAAM,kBAAC,GAAD,SACnC,kBAAC,IAAD,CAAOD,KAAK,SAASC,OAAQ,kBAAM,kBAAC,GAAD,YAZxC,kBAACvE,EAAA,EAAD,U,GAPDE,aA+BdsE,GAAerE,YACfsE,IACArE,aANoB,SAACtH,GAAD,MAAY,CAChC6J,YAAa7J,EAAMuK,IAAIV,eAKE,CAACyB,cJ3BD,kBAAM,SAAC/H,GAClC,IAAIqI,EAAUrI,EAAS8E,MACvBwD,QAAQC,IAAI,CAACF,IACZG,MAAM,WACLxI,EANqC,CAAEzD,KApBf,+BI+CTuH,CAE4BgE,IAShCW,GAPD,SAAC1L,GACX,OAAO,kBAAC,IAAD,KACH,kBAAC,IAAD,CAAUoK,MAAOA,IACb,kBAACgB,GAAD,SCjDZO,IAASR,OACL,kBAAC,GAAD,MAAWS,SAASC,eAAe,SlByHjC,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMP,MAAK,SAAAQ,GACjCA,EAAaC,iB,sEmB3HJtF,IAJC,SAAC5G,GACb,OAAO,yBAAKwF,IAAK2G,Q,gCCLrB,oEAAO,IAAMrD,EAAW,SAAAsD,GACrB,IAAIA,EAEJ,MAAO,qBAGGC,EAAmB,SAACC,GAAD,OAAe,SAACF,GAC5C,GAAIA,EAAMjD,OAASmD,EAAW,MAAM,iBAAN,OAAwBA,EAAxB,e,mBCNlCxN,EAAOC,QAAU,CAAC,YAAc,mCAAmC,MAAQ,6BAA6B,iBAAmB,0C,mBCA3HD,EAAOC,QAAU,CAAC,UAAY,6BAA6B,WAAa,8BAA8B,aAAe,kC,+BCDrH,qJAGMwN,EAAWC,SAAa,CAC1BC,iBAAiB,EACjBC,QAAS,gDACTC,QAAS,CACL,UAAW,0CAIN1F,EAAW,CACpBP,SADoB,SACXnE,EAAaF,GAClB,OAAOkK,EAASK,IAAT,qBAA2BrK,EAA3B,kBAAgDF,IAClDoJ,MAAK,SAAAvD,GACF,OAAOA,EAAS7E,SAG5BkC,OAPoB,SAOb5C,GACH,OAAO4J,EAASM,KAAT,iBAAwBlK,KAEnC2C,SAVoB,SAUX3C,GACL,OAAO4J,EAASO,OAAT,iBAA0BnK,KAErCoK,WAboB,SAaTpK,GAEP,OADAqK,QAAQC,IAAI,6CACLC,EAAWH,WAAWpK,KAIxBqF,EAAU,CACnBC,GADmB,WAEf,OAAOsE,EAASK,IAAT,YAEXpF,MAJmB,SAIbE,EAAOsB,GAA+C,IAArCC,EAAoC,wDAAhBC,EAAgB,uDAAN,KACjD,OAAOqD,EAASM,KAAK,aAAc,CAACnF,QAAOsB,WAAUC,aAAYC,aAErEzB,OAPmB,WAQf,OAAO8E,EAASO,OAAO,gBAIlB1E,EAAc,CACvBD,cADuB,WAEnB,OAAOoE,EAASK,IAAT,8BAIFM,EAAa,CACtBH,WADsB,SACXpK,GACP,OAAO4J,EAASK,IAAI,WAAajK,IAErCwK,UAJsB,SAIZxK,GACN,OAAO4J,EAASK,IAAI,kBAAoBjK,IAE5CyK,aAPsB,SAOTrH,GACT,OAAOwG,EAASc,IAAT,iBAA+B,CAAEtH,OAAQA,KAEpDuH,UAVsB,SAUZC,GACN,IAAMjE,EAAW,IAAIkE,SAErB,OADAlE,EAASmE,OAAO,QAASF,GAClBhB,EAASc,IAAT,gBAA8B/D,EAAU,CAC3CqD,QAAS,CACL,eAAgB,0BAI5Be,YAnBsB,SAmBVC,GACR,OAAOpB,EAASc,IAAT,UAAwBM,M,mBCnEvC7O,EAAOC,QAAU,CAAC,WAAa,0BAA0B,aAAe,4BAA4B,aAAe,8B,mBCAnHD,EAAOC,QAAU,CAAC,OAAS,uBAAuB,WAAa,6B,g3BCE/D,IAMIC,EAAe,CACf4O,MAAO,CACH,CAAC1O,GAAI,EAAGC,QAAS,iBAAkB0O,WAAY,IAC/C,CAAC3O,GAAI,EAAGC,QAAS,sBAAuB0O,WAAY,IACxDF,QAAS,KACT5H,OAAQ,IAkDC+H,EAAuB,SAACC,GAAD,MAAqB,CAACvO,KA7DzC,WA6DyDuO,mBAI7DC,EAAY,SAACjI,GAAD,MAAa,CAACvG,KA/DpB,aA+DsCuG,WAK5CkI,EAAiB,SAACtL,GAAD,8CAAY,WAAOM,GAAP,eAAAG,EAAA,sEACjB6D,IAAS8F,WAAWpK,GADH,OAClCuF,EADkC,OAEtCjF,EATwC,CAACzD,KA9DpB,mBA8D4CmO,QASzCzF,EAAS7E,OAFK,2CAAZ,uDAMjB8J,EAAY,SAACxK,GAAD,8CAAY,WAAOM,GAAP,eAAAG,EAAA,sEACZ8J,IAAWC,UAAUxK,GADT,OAC7BuF,EAD6B,OAEjCjF,EAAS+K,EAAU9F,EAAS7E,OAFK,2CAAZ,uDAMZ+J,EAAe,SAACrH,GAAD,8CAAY,WAAO9C,GAAP,SAAAG,EAAA,sEACf8J,IAAWE,aAAarH,GADT,OAEH,IAFG,OAEvB1C,KAAKC,YACdL,EAAS+K,EAAUjI,IAHa,2CAAZ,uDAOfuH,EAAY,SAACY,GAAD,8CAAU,WAAOjL,GAAP,eAAAG,EAAA,sEACV8J,IAAWI,UAAUY,GADX,OAEE,KAD7BhG,EAD2B,QAElB7E,KAAKC,YACdL,EAxBqC,CAACzD,KAhEnB,qBAgE6CiG,OAwBtCyC,EAAS7E,KAAKA,KAAKoC,SAHlB,2CAAV,uDAOZiI,EAAc,SAACC,GAAD,8CAAa,WAAO1K,EAAUkL,GAAjB,iBAAA/K,EAAA,6DAC9BT,EAASwL,IAAW3F,KAAK7F,OADK,SAEbuK,IAAWQ,YAAYC,GAFV,UAIH,KAF3BzF,EAF8B,QAIvB7E,KAAKC,WAJkB,gBAKhCL,EAASgL,EAAetL,IALQ,8BAOhCM,EAASmG,YAAW,eAAgB,CAACC,OAAQnB,EAAS7E,KAAKpE,SAAS,MAPpC,kBAQzBsM,QAAQ6C,OAAOlG,EAAS7E,KAAKpE,SAAS,KARb,4CAAb,yDAaZ4K,IA/FQ,WAAmC,IAAlCnK,EAAiC,uDAAzBV,EAAcW,EAAW,uCAErD,OAAQA,EAAOH,MACX,IAjBS,WAkBL,IAAI6O,EAAU,CACVnP,GAAI,EACJC,QAASQ,EAAOoO,eAChBF,WAAY,GAEhB,OAAO,EAAP,GACOnO,EADP,CAEIkO,MAAM,GAAD,mBAAMlO,EAAMkO,OAAZ,CAAmBS,MAShC,IAjCiB,mBAkCb,OAAO,EAAP,GACO3O,EADP,CAEIiO,QAAShO,EAAOgO,UAGxB,IAtCW,aAuCP,OAAO,EAAP,GACOjO,EADP,CAEIqG,OAAQpG,EAAOoG,SAGvB,IA3CY,cA4CR,OAAO,EAAP,GACOrG,EADP,CACckO,MAAOlO,EAAMkO,MAAMlK,QAAO,SAAAoB,GAAC,OAAIA,EAAE5F,IAAMS,EAAO2O,YAGhE,IA/CmB,qBAgDf,OAAO,EAAP,GACO5O,EADP,CACciO,QAAQ,EAAD,GAAMjO,EAAMiO,QAAZ,CAAqBlI,OAAQ9F,EAAO8F,WAG7D,QACI,OAAO/F,M","file":"static/js/main.f3858b60.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/user.888e0066.png\";","const SEND_MESSAGE = 'SEND-MESSAGE';\r\n\r\nlet initialState = {\r\n    messages: [\r\n        { id: 1, message: 'Hi!' },\r\n        { id: 2, message: 'How are u?' },\r\n        { id: 3, message: 'Yo!' },\r\n        { id: 4, message: 'Yo!' },\r\n        { id: 5, message: 'Yo!' },\r\n        { id: 6, message: 'Yo!' }],\r\n    dialogs: [\r\n        { id: 1, name: 'Ivan' },\r\n        { id: 2, name: 'Yulia' },\r\n        { id: 3, name: 'Alex' },\r\n        { id: 4, name: 'Anton' },\r\n        { id: 5, name: 'Oleg' },\r\n        { id: 6, name: 'Alexander' }],\r\n    newMessageBody: \"\"\r\n}\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SEND_MESSAGE: {\r\n            let body = action.newMessageBody;\r\n\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, { id: 6, message: body }]\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const sendMessageCreator = (newMessageBody) => ({ type: SEND_MESSAGE, newMessageBody })\r\n\r\nexport default dialogsReducer;","module.exports = __webpack_public_path__ + \"static/media/pre-loader.27e2ef14.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__2x4Rg\",\"item\":\"Navbar_item__2uQIB\",\"activeLink\":\"Navbar_activeLink__2Vggm\"};","import React from 'react';\r\nimport classes from './FormsControns.module.css';\r\nimport {Field} from \"redux-form\";\r\nimport {required} from \"../../../utils/validators\";\r\n\r\nconst FormControl = ({input, meta, child, ...props}) => {\r\n    const hasError = meta.touched && meta.error;\r\n\r\n    return (\r\n        <div className={classes.formControl + \" \" + (hasError ? classes.error : \" \")}>\r\n            <div>\r\n                {props.children}\r\n            </div>\r\n            {hasError && <span> {meta.error} </span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Textarea = (props) => {\r\n    const {input, meta, ...restProps} = props;\r\n    return <FormControl {...props}> <textarea {...input} {...restProps} /> </FormControl>\r\n}\r\n\r\nexport const Input = (props) => {\r\n    const {input, meta, ...restProps} = props;\r\n    return <FormControl {...props}> <input {...input} {...restProps} /> </FormControl>\r\n}\r\n\r\nexport const createField = (placeholder, name, validators, component, props = {}, text = '') => {\r\n    return (\r\n        <div>\r\n            <Field placeholder={placeholder} name={name}\r\n                   validate={validators}\r\n                   component={component}\r\n                   {...props}\r\n            /> {text}\r\n        </div>\r\n    )\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport classes from './Navbar.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <nav className={classes.nav}>\r\n            <div className={classes.item}>\r\n                <NavLink to=\"/profile\" activeClassName={classes.activeLink}>Profile</NavLink>\r\n            </div>\r\n            <div className={classes.item}>\r\n                <NavLink to=\"/Dialogs\" activeClassName={classes.activeLink}>Messages</NavLink>\r\n            </div>\r\n            <div className={classes.item}>\r\n                <NavLink to=\"/Users\" activeClassName={classes.activeLink}>Users</NavLink>\r\n            </div>\r\n            <div className={classes.item}>\r\n                <a >News</a>\r\n            </div>\r\n            <div className={classes.item}>\r\n                <a>Music</a>\r\n            </div>\r\n            <div className={classes.item}>\r\n                <a>Settings</a>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Navbar;","export const updateObjectInArray = (items, itemId, objPropName, newObjProps) => {\r\n   return items.map(u => {\r\n        if (u[objPropName] === itemId) {\r\n            return {...u, ...newObjProps}\r\n        }\r\n        return u;\r\n    })\r\n}","import {usersAPI} from '../api/api';\r\nimport {updateObjectInArray} from \"../utils/object-helpers\";\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 10,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    followingInProgress: []\r\n};\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, 'id', {followed: true})\r\n            }\r\n\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, 'id', {followed: false})\r\n            }\r\n\r\n        case SET_USERS: {\r\n            return {\r\n                ...state,\r\n                users: [...action.users]\r\n            }\r\n        }\r\n        case SET_CURRENT_PAGE: {\r\n            return {\r\n                ...state, currentPage: action.currentPage\r\n            }\r\n        }\r\n        case SET_TOTAL_USERS_COUNT: {\r\n            return {\r\n                ...state, totalUsersCount: action.count\r\n            }\r\n        }\r\n        case TOGGLE_IS_FETCHING: {\r\n            return {\r\n                ...state, isFetching: action.isFetching\r\n            }\r\n        }\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS: {\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id != action.userId)\r\n\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const followSucces = (userId) => ({type: FOLLOW, userId})\r\n\r\nexport const unfollowSucces = (userId) => ({type: UNFOLLOW, userId})\r\n\r\nexport const setUsers = (users) => ({type: SET_USERS, users})\r\n\r\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage})\r\n\r\nexport const setTotalUsersCount = (totalUsersCount) => ({type: SET_TOTAL_USERS_COUNT, count: totalUsersCount})\r\n\r\nexport const toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching})\r\n\r\nexport const toggleFollowingProgress = (isFetching, userId) => ({\r\n    type: TOGGLE_IS_FOLLOWING_PROGRESS,\r\n    isFetching,\r\n    userId\r\n})\r\n\r\nexport const getUsers = (currentPage, pageSize) => {\r\n    return async (dispatch) => {\r\n        dispatch(setCurrentPage(currentPage));\r\n        dispatch(toggleIsFetching(true));\r\n\r\n        let data = await usersAPI.getUsers(currentPage, pageSize);\r\n        dispatch(toggleIsFetching(false));\r\n        dispatch(setUsers(data.items));\r\n        dispatch(setTotalUsersCount(data.totalCount));\r\n    }\r\n}\r\n\r\nconst followUnfollowFlow = async (dispatch, userId, apiMethod, actionCreator) => {\r\n    dispatch(toggleFollowingProgress(true, userId));\r\n\r\n    let response = await apiMethod(userId);\r\n    if (response.data.resultCode == 0) {\r\n        dispatch(actionCreator(userId));\r\n    }\r\n    dispatch(toggleFollowingProgress(false, userId));\r\n}\r\n\r\nexport const follow = (userId) => {\r\n    return async (dispatch) => {\r\n        dispatch(toggleFollowingProgress(true, userId));\r\n        let apiMethod = usersAPI.follow.bind(usersAPI);\r\n        let actionCreator = followSucces;\r\n        followUnfollowFlow(dispatch, userId, apiMethod, actionCreator);\r\n    }\r\n}\r\n\r\nexport const unfollow = (userId) => {\r\n    return async (dispatch) => {\r\n        dispatch(toggleFollowingProgress(true, userId));\r\n        let apiMethod = usersAPI.unfollow.bind(usersAPI);\r\n        let actionCreator = unfollowSucces;\r\n        followUnfollowFlow(dispatch, userId, apiMethod, actionCreator);\r\n    }\r\n}\r\n\r\nexport default usersReducer;","import React, {useState} from 'react';\r\nimport styles from './Paginator.module.css';\r\nimport cn from \"classnames\";\r\n\r\n\r\nlet Paginator = ({totalItemsCount, pageSize, currentPage, onPageChanged, portionSize = 10}) => {\r\n    let pagesCount = Math.ceil(totalItemsCount / pageSize);\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n    let portionCount = Math.ceil(pagesCount / portionSize);\r\n    let [portionNumber, setPortionNumber] = useState(1);\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize +1;\r\n    let rightPortionPageNumber = portionNumber * portionSize;\r\n\r\n    return  <div className={styles.paginator}>\r\n        {portionNumber > 1 &&\r\n        <button onClick={ () => {setPortionNumber(portionNumber-1) }}>PREV</button>}\r\n\r\n        {pages\r\n            .filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber)\r\n            .map( (p) => {\r\n                return <span className={ cn({\r\n                    [styles.selectedPage]: currentPage === p\r\n                }, styles.pageNumber) }\r\n                             key={p}\r\n                             onClick={(e) => { onPageChanged(p); }}>{p}</span>\r\n            })}\r\n\r\n        { portionCount > portionNumber &&\r\n        <button onClick={() => { setPortionNumber(portionNumber + 1) }}>NEXT</button> }\r\n\r\n            </div>\r\n}\r\n\r\n\r\nexport default Paginator;","import React from 'react';\r\nimport usersPhoto from '../../assets/images/user.png';\r\nimport styles from './users.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\n\r\nlet User = ({user, followingInProgress,unfollow,follow}) => {\r\n    return (\r\n        <div>\r\n                <span>\r\n                    <div>\r\n                        <NavLink to={'/profile/' + user.id}>\r\n                            <img src={user.photos.small != null ? user.photos.small : usersPhoto} className={styles.usersPhoto} />\r\n                        </NavLink>\r\n                    </div>\r\n                    <div className={styles.buttonFollow}>\r\n                        {user.followed\r\n                            ? <button disabled={followingInProgress.some( id => id === user.id)}\r\n                            onClick={() => { unfollow(user.id)\r\n                            }}>UnFollow</button>\r\n                            : <button disabled={followingInProgress.some( id => id === user.id)}\r\n                             onClick={() => { follow(user.id)\r\n                            }}>Follow</button>}\r\n                    </div>\r\n                </span>\r\n                <span>\r\n                    <span>\r\n                        <div>{user.name}</div>\r\n                        <div>{user.status}</div>\r\n                    </span>\r\n                    <span>\r\n                        <div>{\"u.location.country\"}</div>\r\n                        <div>{\"u.location.city\"}</div>\r\n                    </span>\r\n                </span>\r\n            </div>)\r\n}\r\n\r\n\r\nexport default User;","import React from 'react';\r\nimport Paginator from '../commons/Paginator/Paginator';\r\nimport User from \"./User\";\r\n\r\n\r\nlet Users = ({currentPage, totalUsersCount, pageSize, onPageChanged, users, ...props}) => {\r\n    return <div>\r\n        <Paginator currentPage={currentPage} onPageChanged={onPageChanged}\r\n                   totalItemsCount={totalUsersCount} pageSize={pageSize}/>\r\n        <div>\r\n            {\r\n                users.map(u => <User user={u} key={u.id}\r\n                                     followingInProgress={props.followingInProgress}\r\n                                     unfollow={props.unfollow}\r\n                                     follow={props.follow}\r\n\r\n                    />\r\n                )\r\n            }\r\n        </div>\r\n    </div>\r\n}\r\n\r\n\r\nexport default Users;","import { createSelector } from \"reselect\";\r\n\r\nexport const getUserSelector = (state) => {\r\n    return state.usersPage.users;\r\n}\r\n\r\nexport const getUser = createSelector(getUserSelector,\r\n    (users) => {\r\n\r\n        return users.filter(u => true);\r\n})\r\n\r\nexport const getPageSize = (state) => {\r\n    return state.usersPage.pageSize;\r\n}\r\n\r\nexport const getTotalUsersCount = (state) => {\r\n    return state.usersPage.totalUsersCount;\r\n}\r\n\r\nexport const getCurrentPage = (state) => {\r\n    return state.usersPage.currentPage;\r\n}\r\n\r\nexport const getIsFetching = (state) => {\r\n    return state.usersPage.isFetching;\r\n}\r\n\r\nexport const getFollowingInProgress = (state) => {\r\n    return state.usersPage.followingInProgress;\r\n}","import React from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {follow, unfollow, setCurrentPage, toggleFollowingProgress, getUsers} from '../../redux/users-reducer'\r\nimport Users from './Users';\r\nimport Preloader from '../commons/Preloader/Preloader';\r\nimport {compose} from 'redux';\r\nimport {\r\n    getFollowingInProgress,\r\n    getIsFetching,\r\n    getCurrentPage,\r\n    getTotalUsersCount,\r\n    getPageSize,\r\n    getUser\r\n} from '../../redux/users-selectors';\r\n\r\nclass UsersContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        this.props.getUsers(this.props.currentPage, this.props.pageSize);\r\n    }\r\n\r\n\r\n    onPageChanged = (pageNumber) => {\r\n        this.props.getUsers(pageNumber, this.props.pageSize);\r\n    }\r\n\r\n    render() {\r\n\r\n        return <>\r\n            {this.props.isFetching ? <Preloader/> : null}\r\n            <Users totalUsersCount={this.props.totalUsersCount}\r\n                   pageSize={this.props.pageSize}\r\n                   currentPage={this.props.currentPage}\r\n                   onPageChanged={this.onPageChanged}\r\n                   users={this.props.users}\r\n                   follow={this.props.follow}\r\n                   unfollow={this.props.unfollow}\r\n                   followingInProgress={this.props.followingInProgress}/>\r\n        </>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: getUser(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state)\r\n    }\r\n}\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {\r\n        follow, unfollow,\r\n        setCurrentPage, toggleFollowingProgress,\r\n        getUsers\r\n    })\r\n)(UsersContainer);","import React from 'react';\r\nimport classes from './Header.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst Header = (props) => {\r\n  return (\r\n    <header className={classes.header}>\r\n      <img src='https://upload.wikimedia.org/wikipedia/commons/thumb/a/a7/React-icon.svg/768px-React-icon.svg.png'></img>\r\n      \r\n      <div className={classes.loginBlock}>\r\n        {props.isAuth \r\n        ? <div>{props.login} - <button onClick={props.logout}>Log Out</button></div>\r\n        : <NavLink to={'/login'}>Login</NavLink> }\r\n      </div>\r\n    </header>\r\n  )\r\n}\r\n\r\nexport default Header;","import {authAPI, securityAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst SET_USER_DATA = 'auth/SET_USER_DATA';\r\nconst GET_CAPTCHA_URL_SUCCESS = 'auth/GET_CAPTCHA_URL_SUCCESS';\r\n\r\nlet initialState = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false,\r\n    captchaUrl: null\r\n}\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n        case GET_CAPTCHA_URL_SUCCESS:\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const setAuthUserData = (userId, email, login, isAuth) => ({\r\n    type: SET_USER_DATA,\r\n    payload: {userId, email, login, isAuth}\r\n})\r\n\r\nexport const getCaptchaUrlSuccess = (captchaUrl) => ({\r\n    type: GET_CAPTCHA_URL_SUCCESS, payload: {captchaUrl}\r\n})\r\n\r\nexport const getAuthUserData = () => async (dispatch) => {\r\n    let response = await authAPI.me();\r\n    if (response.data.resultCode === 0) {\r\n        let {id, email, login} = response.data.data;\r\n        dispatch(setAuthUserData(id, email, login, true));\r\n    }\r\n}\r\n\r\nexport const login = (email, password, rememberMe, captcha) => async (dispatch) => {\r\n    let response = await authAPI.login(email, password, rememberMe, captcha);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getAuthUserData());\r\n    } else {\r\n        if (response.data.resultCode === 10) {\r\n            dispatch(getCaptchaUrl());\r\n        }\r\n        let message = response.data.messages.length > 0 ? response.data.messages[0] : 'Some Error';\r\n        dispatch(stopSubmit('login', {_error: message}));\r\n    }\r\n}\r\n\r\nexport const getCaptchaUrl = () => async (dispatch) => {\r\n    const response = await securityAPI.getCaptchaUrl();\r\n    const captchaUrl = response.data.url;\r\n    dispatch(getCaptchaUrlSuccess(captchaUrl));\r\n}\r\n\r\n\r\nexport const logout = () => async (dispatch) => {\r\n    let response = await authAPI.logout();\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setAuthUserData(null, null, null, false));\r\n    }\r\n}\r\n\r\nexport default authReducer;","import React from 'react';\r\nimport Header from './Header';\r\nimport { connect } from 'react-redux';\r\nimport { logout } from '../../redux/auth-reducer';\r\n\r\n\r\nclass HeaderContainer extends React.Component {\r\n\r\n  render() {\r\n    return (\r\n      <Header {...this.props} />\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuth: state.auth.isAuth,\r\n  login: state.auth.login\r\n})\r\n\r\nexport default connect(mapStateToProps, { logout })(HeaderContainer);","import React from 'react';\r\nimport { reduxForm, Field } from 'redux-form';\r\nimport {createField, Input} from '../commons/FormsControls/FormsControns';\r\nimport { required } from '../../utils/validators';\r\nimport { connect } from 'react-redux';\r\nimport {login} from '../../redux/auth-reducer';\r\nimport { Redirect } from 'react-router-dom';\r\nimport classes from '../commons/FormsControls/FormsControns.module.css';\r\n\r\nconst LoginForm = ({handleSubmit,error, captchaUrl}) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n\r\n                {createField('email', 'email', [required], Input)}\r\n                {createField('Password', 'password', [required], Input, {type:'password'})}\r\n                {createField(null, 'rememberMe', [], Input, {type:'checkbox'}, 'remember me')}\r\n\r\n            { captchaUrl && <img src={captchaUrl} />}\r\n            { captchaUrl && createField('symbols from img', 'captcha', [required], Input, {})}\r\n          { error && <div className={classes.formSummaryError}>\r\n                {error}\r\n            </div>}\r\n            <div>\r\n                <button>Login</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\n\r\nconst LoginReduxForm = reduxForm({ form: 'login'})(LoginForm)\r\n\r\n\r\nconst Login = (props) => {\r\n    const onSubmit = (formData) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe, formData.captcha);\r\n    }   \r\n    \r\n    if (props.isAuth) {\r\n        return <Redirect to={\"/profile\"} />\r\n    }\r\n\r\n    return <div>\r\n        <h1>LOGIN</h1>\r\n        <LoginReduxForm onSubmit={onSubmit} captchaUrl={props.captchaUrl} />\r\n    </div>\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    captchaUrl: state.auth.captchaUrl,\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default connect(mapStateToProps, {login})(Login);","import { getAuthUserData } from \"./auth-reducer\";\r\n\r\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\r\n\r\n\r\nlet initialState = {\r\n  initialized: false\r\n}\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case INITIALIZED_SUCCESS:\r\n      return {\r\n        ...state,\r\n        initialized: true\r\n      }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const initializedSuccess = () => ({ type: INITIALIZED_SUCCESS })\r\n\r\nexport const initializeApp = () => (dispatch) => {\r\n  let promise = dispatch(getAuthUserData());\r\n  Promise.all([promise])\r\n  .then( () => {\r\n    dispatch(initializedSuccess());\r\n  });\r\n}\r\n\r\nexport default appReducer;","let initialState = {\r\n\r\n}\r\n\r\nconst sidebarReducer = (state = initialState, action) => {\r\n    return state;\r\n}\r\n\r\nexport default sidebarReducer;","import {createStore, combineReducers, applyMiddleware, compose} from \"redux\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport sidebarReducer from \"./sidebar-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport { reducer as formReducer } from 'redux-form';\r\nimport appReducer from \"./app-reducer\";\r\n\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    auth:authReducer,\r\n    form: formReducer,\r\n    app: appReducer\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)));\r\n\r\nwindow.__store__ = store;\r\n\r\nexport default store;","import React from 'react';\r\nimport Preloader from \"../components/commons/Preloader/Preloader\";\r\n\r\nexport const withSuspense = (Component) => {\r\n    return (props) => {\r\n       return <React.Suspense fallback={<Preloader />}>\r\n           <Component {...props} />\r\n       </React.Suspense>\r\n    };\r\n}\r\n\r\n","import React, {Component} from 'react';\nimport './App.css';\nimport Navbar from './components/Navbar/Navbar';\nimport {HashRouter, Redirect, Route, Switch, withRouter} from 'react-router-dom';\nimport UsersContainer from './components/Users/UsersContainer';\nimport HeaderContainer from './components/Header/HeaderContainer';\nimport Login from './components/Login/Login';\nimport {initializeApp} from './redux/app-reducer';\nimport {connect, Provider} from 'react-redux';\nimport {compose} from 'redux';\nimport Preloader from './components/commons/Preloader/Preloader';\nimport store from \"./redux/redux-store\";\nimport {withSuspense} from \"./hoc/withSuspense\";\n\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'));\nconst ProfileContainer = React.lazy(() => import('./components/Profile/ProfileContainer'));\n\n\nclass App extends Component {\n    componentDidMount() {\n        this.props.initializeApp();\n    }\n\n    render() {\n        if (!this.props.initialized) {\n            return <Preloader/>\n        }\n        return (\n            <div className='app-wrapper'>\n                <HeaderContainer/>\n                <Navbar/>\n                <div className='app-wrapper-content'>\n                    <Switch>\n                        <Route exact path='/' render={() => <Redirect to={'/profile'}/>}/>\n                        <Route path='/dialogs' render={withSuspense(DialogsContainer)}/>\n                        <Route path='/profile/:userId?' render={withSuspense(ProfileContainer)}/>\n                        <Route path='/users' render={() => <UsersContainer/>}/>\n                        <Route path='/login' render={() => <Login/>}/>\n                    </Switch>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    initialized: state.app.initialized\n})\n\nlet AppContainer = compose(\n    withRouter,\n    connect(mapStateToProps, {initializeApp}))(App);\n\nconst JSApp = (props) => {\n    return <HashRouter>\n        <Provider store={store}>\n            <AppContainer/>\n        </Provider>\n    </HashRouter>\n}\nexport default JSApp;","import React from 'react';\nimport * as serviceWorker from './serviceWorker';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport JSApp from './App';\n\n\nReactDOM.render(\n    <JSApp />, document.getElementById('root'));\n\n\n\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import preloader from '../../../assets/images/pre-loader.svg'\r\nimport React from 'react'\r\n\r\n\r\nlet Preloader = (props) => {\r\n    return <img src={preloader} />\r\n}\r\n\r\nexport default Preloader;","export const required = value => {\r\n   if (value) return undefined;\r\n   \r\n   return 'Field is required';\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if (value.length > maxLength) return `Max Length is ${maxLength} symbols`;\r\n    \r\n    return undefined;\r\n }\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControns_formControl__2NaLv\",\"error\":\"FormsControns_error__1TovL\",\"formSummaryError\":\"FormsControns_formSummaryError__1BZaB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"Paginator_paginator__2Clm2\",\"pageNumber\":\"Paginator_pageNumber__21H6l\",\"selectedPage\":\"Paginator_selectedPage__2zH-g\"};","import * as axios from 'axios';\r\n\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\r\n        \"API-KEY\": \"b64a56d5-4507-4df9-b801-8ca63b9a8f74\"\r\n    }\r\n});\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage, pageSize) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => {\r\n                return response.data;\r\n            });\r\n    },\r\n    follow(userId) {\r\n        return instance.post(`follow/${userId}`)\r\n    },\r\n    unfollow(userId) {\r\n        return instance.delete(`follow/${userId}`)\r\n    },\r\n    getProfile(userId) {\r\n        console.log('Obsolet method. Please profileAPI object.')\r\n        return profileAPI.getProfile(userId);\r\n    }\r\n}\r\n\r\nexport const authAPI = {\r\n    me() {\r\n        return instance.get(`auth/me`)\r\n    },\r\n    login(email, password, rememberMe = false, captcha = null) {\r\n        return instance.post('auth/login', {email, password, rememberMe, captcha});\r\n    },\r\n    logout() {\r\n        return instance.delete('auth/login');\r\n    }\r\n}\r\n\r\nexport const securityAPI = {\r\n    getCaptchaUrl() {\r\n        return instance.get(`security/get-captcha-url`);\r\n    }\r\n}\r\n\r\nexport const profileAPI = {\r\n    getProfile(userId) {\r\n        return instance.get(`profile/` + userId);\r\n    },\r\n    getStatus(userId) {\r\n        return instance.get(`profile/status/` + userId);\r\n    },\r\n    updateStatus(status) {\r\n        return instance.put(`profile/status`, { status: status });\r\n    },\r\n    savePhoto(photoFile) {\r\n        const formData = new FormData();\r\n        formData.append(\"image\", photoFile);\r\n        return instance.put(`profile/photo`, formData, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        });\r\n    },\r\n    saveProfile(profile) {\r\n        return instance.put(`profile`, profile );\r\n    }\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"usersPhoto\":\"users_usersPhoto__1iFOd\",\"selectedPage\":\"users_selectedPage__24FSB\",\"buttonFollow\":\"users_buttonFollow__2B5mM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__jR2Sw\",\"loginBlock\":\"Header_loginBlock__19Ao0\"};","import {usersAPI, profileAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst SET_STATUS = 'SET_STATUS';\r\nconst DELETE_POST = 'DELETE_POST';\r\nconst SAVE_PHOTO_SUCCESS = 'SAVE_PHOTO_SUCCESS';\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {id: 1, message: 'Hi, how are u?', likesCount: 12},\r\n        {id: 2, message: 'it is my first post', likesCount: 5}],\r\n    profile: null,\r\n    status: ''\r\n};\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            let newPost = {\r\n                id: 5,\r\n                message: action.newPostElement,\r\n                likesCount: 0\r\n            };\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost]\r\n            }\r\n\r\n            // let stateCopy = { ...state };\r\n            // stateCopy.posts = [...state.posts];\r\n            // stateCopy.posts.push(newPost);\r\n            // stateCopy.newPostText = '';\r\n            // return stateCopy;\r\n        }\r\n        case SET_USER_PROFILE: {\r\n            return {\r\n                ...state,\r\n                profile: action.profile\r\n            }\r\n        }\r\n        case SET_STATUS: {\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        }\r\n        case DELETE_POST: {\r\n            return {\r\n                ...state, posts: state.posts.filter(p => p.id != action.postId)\r\n            }\r\n        }\r\n        case SAVE_PHOTO_SUCCESS: {\r\n            return {\r\n                ...state, profile: {...state.profile, photos: action.photos}\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const addPostActionCreator = (newPostElement) => ({type: ADD_POST, newPostElement})\r\n\r\nexport const setUserProfile = (profile) => ({type: SET_USER_PROFILE, profile})\r\n\r\nexport const setStatus = (status) => ({type: SET_STATUS, status})\r\n\r\nexport const deletePost = (postId) => ({type: DELETE_POST, postId})\r\nexport const savePhotoSuccess = (photos) => ({type: SAVE_PHOTO_SUCCESS, photos})\r\n\r\nexport const getUserProfile = (userId) => async (dispatch) => {\r\n    let response = await usersAPI.getProfile(userId);\r\n    dispatch(setUserProfile(response.data));\r\n\r\n}\r\n\r\nexport const getStatus = (userId) => async (dispatch) => {\r\n    let response = await profileAPI.getStatus(userId);\r\n    dispatch(setStatus(response.data));\r\n\r\n}\r\n\r\nexport const updateStatus = (status) => async (dispatch) => {\r\n    let response = await profileAPI.updateStatus(status);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setStatus(status));\r\n    }\r\n}\r\n\r\nexport const savePhoto = (file) => async (dispatch) => {\r\n    let response = await profileAPI.savePhoto(file);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(savePhotoSuccess(response.data.data.photos));\r\n    }\r\n}\r\n\r\nexport const saveProfile = (profile) => async (dispatch, getState) => {\r\n    const userId = getState().auth.userId;\r\n    const response = await profileAPI.saveProfile(profile);\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getUserProfile(userId));\r\n    } else {\r\n        dispatch(stopSubmit('edit-profile', {_error: response.data.messages[0]}));\r\n        return Promise.reject(response.data.messages[0]);\r\n    }\r\n}\r\n\r\n\r\nexport default profileReducer;"],"sourceRoot":""}