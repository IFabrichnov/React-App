{"version":3,"sources":["components/Dialogs/Dialogs.module.css","hoc/withAuthRedirect.js","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/AddMessageForm/AddMessageForm.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","DialogItem","className","classes","dialog","active","id","name","Message","message","maxLength50","maxLengthCreator","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","required","placeholder","Dialogs","dialogsPage","dialogsElements","dialogs","map","d","messagesElemenst","messages","m","newMessageBody","dialogsItems","values","sendMessage","compose","dispatch","sendMessageCreator"],"mappings":"2FACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,2B,+ICG9KC,EAA6B,SAACC,GAAD,MAAY,CACzCC,OAAQD,EAAME,KAAKD,SAGVE,EAAmB,SAACC,GAAe,IACtCC,EADqC,iLAGnC,OAAKC,KAAKC,MAAMN,OACT,kBAACG,EAAcE,KAAKC,OADI,kBAAC,IAAD,CAAUC,GAAG,eAHT,GACXC,IAAML,WAStC,OAFqCM,YAAQX,EAARW,CAAoCL,K,+FCF9DM,EATI,SAACJ,GAChB,OACI,yBAAKK,UAAWC,IAAQC,OAAS,IAAMD,IAAQE,QAC3C,kBAAC,IAAD,CAASP,GAAI,YAAcD,EAAMS,IAAKT,EAAMU,QCEzCC,EAPC,SAACX,GACb,OACI,yBAAKK,UAAWC,IAAQM,SAAUZ,EAAMY,U,yCCA1CC,EAAcC,YAAiB,IAaxBC,EAAsBC,YAAU,CAACC,KAAM,wBAAjBD,EAXZ,SAAChB,GACpB,OACI,0BAAMkB,SAAUlB,EAAMmB,cAClB,6BACA,kBAACC,EAAA,EAAD,CAAOC,UAAWC,IAAUC,SAAU,CAACC,IAAUX,GAAcH,KAAK,iBAAiBe,YAAY,wBAEjG,gDC8BGC,EApCC,SAAC1B,GAEb,IAAIP,EAAQO,EAAM2B,YAEdC,EAAkBnC,EAAMoC,QAAQC,KAAI,SAAAC,GAAC,OAAI,kBAAC,EAAD,CAAYrB,KAAMqB,EAAErB,KAAMD,GAAIsB,EAAEtB,QAEzEuB,EAAmBvC,EAAMwC,SAASH,KAAI,SAAAI,GAAC,OAAI,kBAAC,EAAD,CAAStB,QAASsB,EAAEtB,aAE9CnB,EAAM0C,eAM3B,OAAoB,GAAhBnC,EAAMN,OAAwB,kBAAC,IAAD,CAAUO,GAAI,WAG5C,yBAAKI,UAAWC,IAAQuB,SACpB,yBAAKxB,UAAWC,IAAQ8B,cACnBR,GAEL,yBAAKvB,UAAWC,IAAQ2B,UACpB,6BACKD,GAEL,6BACI,8BACA,+BAEJ,kBAACjB,EAAD,CAAqBG,SAnBb,SAACmB,GACjBrC,EAAMsC,YAAYD,EAAOF,sB,wBC0BlBI,sBACXpC,aAhBkB,SAACV,GACnB,MAAO,CACHkC,YAAalC,EAAMkC,gBAIF,SAACa,GACtB,MAAO,CACHF,YAAa,SAACH,GACVK,EAASC,YAAmBN,SAQpCvC,IAFW2C,CAGbb","file":"static/js/4.55feb1fe.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__1pPts\",\"dialogsItems\":\"Dialogs_dialogsItems__1XGXS\",\"active\":\"Dialogs_active__39BCz\",\"messages\":\"Dialogs_messages__3YKTK\",\"message\":\"Dialogs_message__2yp-w\"};","import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n  });\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to='/login' />\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n      \r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n      \r\n    return ConnectedAuthRedirectComponent;\r\n}\r\n\r\n","import React from 'react';\r\nimport classes from './../Dialogs.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\n\r\nconst DialogItem = (props) => {\r\n    return (\r\n        <div className={classes.dialog + ' ' + classes.active}>\r\n            <NavLink to={\"/Dialogs/\" + props.id}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport classes from './../Dialogs.module.css';\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div className={classes.message}>{props.message}</div>\r\n    )\r\n}\r\n\r\n\r\nexport default Message;","import React from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { required, maxLengthCreator } from '../../../utils/validators';\r\nimport { Textarea } from '../../commons/FormsControls/FormsControns'\r\n\r\nconst maxLength50 = maxLengthCreator(50);\r\n\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n            <Field component={Textarea} validate={[required, maxLength50]} name='newMessageBody' placeholder='Enter your message' />\r\n            </div>\r\n            <button>Add Post</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport const AddMessageFormRedux = reduxForm({form: 'dialogAddMessageForm'}) (AddMessageForm);\r\n","import React from 'react';\r\nimport classes from './Dialogs.module.css';\r\nimport DialogItem from './DialogItem/DialogItem';\r\nimport Message from './Message/Message';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { AddMessageFormRedux } from './AddMessageForm/AddMessageForm';\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let state = props.dialogsPage;\r\n\r\n    let dialogsElements = state.dialogs.map(d => <DialogItem name={d.name} id={d.id} />);\r\n\r\n    let messagesElemenst = state.messages.map(m => <Message message={m.message} />);\r\n\r\n    let newMessageBody = state.newMessageBody;\r\n\r\n    let addNewMessage = (values) => {\r\n        props.sendMessage(values.newMessageBody);\r\n    }\r\n\r\n    if (props.isAuth == false) return <Redirect to={'/login'} />;\r\n\r\n    return (\r\n        <div className={classes.dialogs}>\r\n            <div className={classes.dialogsItems}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={classes.messages}>\r\n                <div>\r\n                    {messagesElemenst}\r\n                </div>\r\n                <div>\r\n                    <div></div>\r\n                    <div></div>\r\n                </div>\r\n                <AddMessageFormRedux onSubmit={addNewMessage} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Dialogs;","import React from 'react';\r\nimport { sendMessageCreator } from '../../redux/dialogs-reducer';\r\nimport Dialogs from './Dialogs';\r\nimport { connect } from 'react-redux';\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\n// const DialogsContainer = () => {\r\n\r\n//     return <StoreContext.Consumer>\r\n//         {store => {\r\n\r\n//             //let state = store.getState().dialogsPage;\r\n\r\n//             let onMessageClick = () => {\r\n//                 store.dispatch(sendMessageCreator());\r\n//             }\r\n\r\n//             let onNewMessageChange = (body) => {\r\n//                 store.dispatch(updateNewMessageBodyCreator(body));\r\n//             }\r\n//             return <Dialogs updateNewMessageBody={onNewMessageChange} sendMessage={onMessageClick}\r\n//                 dialogsPage={store.getState().dialogsPage} />\r\n//         }\r\n//         }\r\n//     </StoreContext.Consumer>\r\n\r\n// }\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (newMessageBody) => {\r\n            dispatch(sendMessageCreator(newMessageBody));\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps,mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs);"],"sourceRoot":""}