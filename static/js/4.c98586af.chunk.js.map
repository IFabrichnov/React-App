{"version":3,"sources":["components/Dialogs/Dialogs.module.css","../node_modules/@material-ui/core/esm/Icon/Icon.js","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/AddMessageForm/AddMessageForm.jsx","components/Dialogs/Dialogs.jsx","hoc/withAuthRedirect.js","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","Icon","forwardRef","props","ref","classes","className","_props$color","color","_props$component","component","Component","_props$fontSize","fontSize","other","createElement","root","concat","muiName","theme","userSelect","typography","pxToRem","width","height","overflow","flexShrink","colorPrimary","palette","primary","main","colorSecondary","secondary","colorAction","action","active","colorError","error","colorDisabled","disabled","fontSizeInherit","fontSizeSmall","fontSizeLarge","name","DialogItem","dialog","to","id","Message","message","maxLength50","maxLengthCreator","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","Textarea","validate","required","placeholder","Button","onClick","variant","button","endIcon","Dialogs","state","dialogsPage","dialogsElements","dialogs","map","d","messagesElemenst","messages","m","newMessageBody","isAuth","dialogsItems","inputArea","values","sendMessage","mapStateToPropsForRedirect","auth","compose","connect","dispatch","sendMessageCreator","RedirectComponent","this","React"],"mappings":"2FACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,yBAAyB,OAAS,wBAAwB,UAAY,2BAA2B,OAAS,0B,iCCD5R,8DA8DIC,EAAO,IAAMC,YAAW,SAAcC,EAAOC,GAC/C,IAAIC,EAAUF,EAAME,QAChBC,EAAYH,EAAMG,UAClBC,EAAeJ,EAAMK,MACrBA,OAAyB,IAAjBD,EAA0B,UAAYA,EAC9CE,EAAmBN,EAAMO,UACzBC,OAAiC,IAArBF,EAA8B,OAASA,EACnDG,EAAkBT,EAAMU,SACxBA,OAA+B,IAApBD,EAA6B,UAAYA,EACpDE,EAAQ,YAAyBX,EAAO,CAAC,UAAW,YAAa,QAAS,YAAa,aAE3F,OAAO,IAAMY,cAAcJ,EAAW,YAAS,CAC7CL,UAAW,YAAK,iBAAkBD,EAAQW,KAAMV,EAAqB,YAAVE,GAAuBH,EAAQ,QAAQY,OAAO,YAAWT,KAAuB,YAAbK,GAA0BR,EAAQ,WAAWY,OAAO,YAAWJ,MAC7L,eAAe,EACfT,IAAKA,GACJU,OAmCLb,EAAKiB,QAAU,OACA,iBA1GK,SAAgBC,GAClC,MAAO,CAELH,KAAM,CACJI,WAAY,OACZP,SAAUM,EAAME,WAAWC,QAAQ,IACnCC,MAAO,MACPC,OAAQ,MAGRC,SAAU,SACVC,WAAY,GAIdC,aAAc,CACZnB,MAAOW,EAAMS,QAAQC,QAAQC,MAI/BC,eAAgB,CACdvB,MAAOW,EAAMS,QAAQI,UAAUF,MAIjCG,YAAa,CACXzB,MAAOW,EAAMS,QAAQM,OAAOC,QAI9BC,WAAY,CACV5B,MAAOW,EAAMS,QAAQS,MAAMP,MAI7BQ,cAAe,CACb9B,MAAOW,EAAMS,QAAQM,OAAOK,UAI9BC,gBAAiB,CACf3B,SAAU,WAIZ4B,cAAe,CACb5B,SAAUM,EAAME,WAAWC,QAAQ,KAIrCoB,cAAe,CACb7B,SAAUM,EAAME,WAAWC,QAAQ,QAuDP,CAChCqB,KAAM,WADO,CAEZ1C,I,+FCrGY2C,EATI,SAACzC,GAChB,OACI,yBAAKG,UAAWD,IAAQwC,OAAS,IAAMxC,IAAQ8B,QAC3C,kBAAC,IAAD,CAAS7B,UAAWD,IAAQwC,OAAQC,GAAI,YAAc3C,EAAM4C,IAAK5C,EAAMwC,QCEpEK,EAPC,SAAC7C,GACb,OACI,yBAAKG,UAAWD,IAAQ4C,SAAU9C,EAAM8C,U,4DCG1CC,EAAcC,YAAiB,IAsBxBC,EAAsBC,YAAU,CAACC,KAAM,wBAAjBD,EApBZ,SAAClD,GACpB,OACI,0BAAMoD,SAAUpD,EAAMqD,cAClB,6BACI,kBAACC,EAAA,EAAD,CAAO/C,UAAWgD,IAAUC,SAAU,CAACC,IAAUV,GAAcP,KAAK,iBAC7DkB,YAAY,wBAEvB,kBAACC,EAAA,EAAD,CACIC,QAAS5D,EAAMqD,aACfQ,QAAQ,YACRxD,MAAM,UACNF,UAAWD,IAAQ4D,OACnBC,QAAS,kBAACjE,EAAA,EAAD,cALb,YCsBGkE,EAhCC,SAAChE,GAEb,IAAIiE,EAAQjE,EAAMkE,YAEdC,EAAkBF,EAAMG,QAAQC,KAAI,SAAAC,GAAC,OAAI,kBAAC,EAAD,CAAY9B,KAAM8B,EAAE9B,KAAMI,GAAI0B,EAAE1B,QAEzE2B,EAAmBN,EAAMO,SAASH,KAAI,SAAAI,GAAC,OAAI,kBAAC,EAAD,CAAS3B,QAAS2B,EAAE3B,aAE9CmB,EAAMS,eAM3B,OAAoB,GAAhB1E,EAAM2E,OAAwB,kBAAC,IAAD,CAAUhC,GAAI,WAG5C,yBAAKxC,UAAWD,IAAQkE,SACpB,yBAAKjE,UAAWD,IAAQ0E,cACnBT,GAEL,yBAAKhE,UAAWD,IAAQsE,UACfD,EACT,yBAAKpE,UAAWD,IAAQ2E,WACpB,kBAAC5B,EAAD,CAAqBG,SAdb,SAAC0B,GACjB9E,EAAM+E,YAAYD,EAAOJ,uB,gDCd7BM,EAA6B,SAACf,GAAD,MAAY,CACzCU,OAAQV,EAAMgB,KAAKN,S,QCiBRO,sBACXC,aAhBkB,SAAClB,GACnB,MAAO,CACHC,YAAaD,EAAMC,gBAIF,SAACkB,GACtB,MAAO,CACHL,YAAa,SAACL,GACVU,EAASC,YAAmBX,UDRR,SAAClE,GAAe,IACtC8E,EADqC,iLAGnC,OAAKC,KAAKvF,MAAM2E,OACT,kBAACnE,EAAc+E,KAAKvF,OADI,kBAAC,IAAD,CAAU2C,GAAG,eAHT,GACX6C,IAAMhF,WAStC,OAFqC2E,YAAQH,EAARG,CAAoCG,KCM9DJ,CAGblB","file":"static/js/4.c98586af.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__1pPts\",\"dialogsItems\":\"Dialogs_dialogsItems__1XGXS\",\"active\":\"Dialogs_active__39BCz\",\"messages\":\"Dialogs_messages__3YKTK\",\"message\":\"Dialogs_message__2yp-w\",\"dialog\":\"Dialogs_dialog__3CzkI\",\"inputArea\":\"Dialogs_inputArea__3Kj0K\",\"button\":\"Dialogs_button__14jlF\"};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      userSelect: 'none',\n      fontSize: theme.typography.pxToRem(24),\n      width: '1em',\n      height: '1em',\n      // Chrome fix for https://bugs.chromium.org/p/chromium/issues/detail?id=820541\n      // To remove at some point.\n      overflow: 'hidden',\n      flexShrink: 0\n    },\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      color: theme.palette.primary.main\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      color: theme.palette.secondary.main\n    },\n\n    /* Styles applied to the root element if `color=\"action\"`. */\n    colorAction: {\n      color: theme.palette.action.active\n    },\n\n    /* Styles applied to the root element if `color=\"error\"`. */\n    colorError: {\n      color: theme.palette.error.main\n    },\n\n    /* Styles applied to the root element if `color=\"disabled\"`. */\n    colorDisabled: {\n      color: theme.palette.action.disabled\n    },\n\n    /* Styles applied to the root element if `fontSize=\"inherit\"`. */\n    fontSizeInherit: {\n      fontSize: 'inherit'\n    },\n\n    /* Styles applied to the root element if `fontSize=\"small\"`. */\n    fontSizeSmall: {\n      fontSize: theme.typography.pxToRem(20)\n    },\n\n    /* Styles applied to the root element if `fontSize=\"large\"`. */\n    fontSizeLarge: {\n      fontSize: theme.typography.pxToRem(36)\n    }\n  };\n};\nvar Icon = React.forwardRef(function Icon(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'inherit' : _props$color,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'span' : _props$component,\n      _props$fontSize = props.fontSize,\n      fontSize = _props$fontSize === void 0 ? 'default' : _props$fontSize,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"color\", \"component\", \"fontSize\"]);\n\n  return React.createElement(Component, _extends({\n    className: clsx('material-icons', classes.root, className, color !== 'inherit' && classes[\"color\".concat(capitalize(color))], fontSize !== 'default' && classes[\"fontSize\".concat(capitalize(fontSize))]),\n    \"aria-hidden\": true,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Icon.propTypes = {\n  /**\n   * The name of the icon font ligature.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['inherit', 'primary', 'secondary', 'action', 'error', 'disabled']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * The fontSize applied to the icon. Defaults to 24px, but can be configure to inherit font size.\n   */\n  fontSize: PropTypes.oneOf(['inherit', 'default', 'small', 'large'])\n} : void 0;\nIcon.muiName = 'Icon';\nexport default withStyles(styles, {\n  name: 'MuiIcon'\n})(Icon);","import React from 'react';\r\nimport classes from './../Dialogs.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\n\r\nconst DialogItem = (props) => {\r\n    return (\r\n        <div className={classes.dialog + ' ' + classes.active}>\r\n            <NavLink className={classes.dialog} to={\"/Dialogs/\" + props.id}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport classes from './../Dialogs.module.css';\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div className={classes.message}>{props.message}</div>\r\n    )\r\n}\r\n\r\n\r\nexport default Message;","import React from 'react';\r\nimport {Field, reduxForm} from 'redux-form';\r\nimport {required, maxLengthCreator} from '../../../utils/validators';\r\nimport {Textarea} from '../../commons/FormsControls/FormsControns'\r\nimport Icon from '@material-ui/core/Icon';\r\nimport Button from \"@material-ui/core/Button\";\r\nimport classes from '../Dialogs.module.css';\r\n\r\nconst maxLength50 = maxLengthCreator(50);\r\n\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea} validate={[required, maxLength50]} name='newMessageBody'\r\n                       placeholder='Enter your message'/>\r\n            </div>\r\n            <Button\r\n                onClick={props.handleSubmit}\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.button}\r\n                endIcon={<Icon>send</Icon>}\r\n            >\r\n                Send\r\n            </Button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport const AddMessageFormRedux = reduxForm({form: 'dialogAddMessageForm'})(AddMessageForm);\r\n","import React from 'react';\r\nimport classes from './Dialogs.module.css';\r\nimport DialogItem from './DialogItem/DialogItem';\r\nimport Message from './Message/Message';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { AddMessageFormRedux } from './AddMessageForm/AddMessageForm';\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let state = props.dialogsPage;\r\n\r\n    let dialogsElements = state.dialogs.map(d => <DialogItem name={d.name} id={d.id} />);\r\n\r\n    let messagesElemenst = state.messages.map(m => <Message message={m.message} />);\r\n\r\n    let newMessageBody = state.newMessageBody;\r\n\r\n    let addNewMessage = (values) => {\r\n        props.sendMessage(values.newMessageBody);\r\n    }\r\n\r\n    if (props.isAuth == false) return <Redirect to={'/login'} />;\r\n\r\n    return (\r\n        <div className={classes.dialogs}>\r\n            <div className={classes.dialogsItems}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={classes.messages}>\r\n                    {messagesElemenst}\r\n            <div className={classes.inputArea}>\r\n                <AddMessageFormRedux onSubmit={addNewMessage} />\r\n            </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Dialogs;","import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n  });\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to='/login' />\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n      \r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n      \r\n    return ConnectedAuthRedirectComponent;\r\n}\r\n\r\n","import React from 'react';\r\nimport { sendMessageCreator } from '../../redux/dialogs-reducer';\r\nimport Dialogs from './Dialogs';\r\nimport { connect } from 'react-redux';\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (newMessageBody) => {\r\n            dispatch(sendMessageCreator(newMessageBody));\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps,mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs);"],"sourceRoot":""}